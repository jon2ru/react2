{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/Dialogitem/Dialogitem.jsx","components/Dialogs/Messages/Messages.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Dialogitem","className","classes","dialog","active","id","name","dialogsitem","avatar","Messages","messages","message","maxLength10","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","textarea","placeholder","validate","required","Dialogs","dialogPages","dialogsElements","dialogs2","map","d","nname","messageElements","messages2","m","dialogs","values","addDialogA","newDialog","compose","dispatch","addDialogActionCreator"],"mappings":"4NAIIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAIVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKC,MAAMN,OAGT,cAACG,EAAD,eAAeE,KAAKC,QAHI,cAAC,IAAD,CAAUC,GAAI,eAHV,GACXC,IAAML,WAStC,OADqCM,YAAQX,EAARW,CAAoCL,K,oBCjB7EM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,4B,sGCW9JC,EAVI,SAACN,GAClB,OACE,sBAAKO,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,OAA/C,UACE,cAAC,IAAD,CAAST,GAAI,YAAcD,EAAMW,GAAjC,SAAsCX,EAAMY,OAC5C,qBAAKL,UAAWC,IAAQK,YAAxB,SAAsCb,EAAMc,aCAnCC,EAJE,SAACf,GAChB,OAAO,qBAAKO,UAAWC,IAAQQ,SAAxB,SAAmChB,EAAMiB,W,yCCI5CC,EAAYC,YAAiB,GAyC7BC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAnBL,SAACrB,GACtB,OACE,uBAAMuB,SAAUvB,EAAMwB,aAAtB,UACE,8BACE,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUf,KAAK,YAAYgB,YAAY,6CACvDC,SAAU,CAACC,IAASZ,OAExB,8BACE,wDAYOa,EAzCC,SAAC/B,GACf,IAAIP,EAAQO,EAAMgC,YACdC,EAAkBxC,EAAMyC,SAASC,KAAI,SAACC,GAAD,OACvC,cAAC,EAAD,CAAYxB,KAAMwB,EAAEC,MAAO1B,GAAIyB,EAAEzB,GAAIG,OAAQsB,EAAEtB,YAE7CwB,EAAkB7C,EAAM8C,UAAUJ,KAAI,SAACK,GAAD,OACxC,cAAC,EAAD,CAAUvB,QAASuB,EAAEvB,aAKvB,OACE,sBAAKV,UAAWC,IAAQiC,QAAxB,UACE,qBAAKlC,UAAWC,IAAQK,YAAxB,SAAsCoB,IACtC,qBAAK1B,UAAWC,IAAQC,OAAxB,SAAiC6B,IACjC,qBAAK/B,UAAWC,IAAQK,YAAxB,SACE,cAACO,EAAD,CAAqBG,SARL,SAACmB,GACrB1C,EAAM2C,WAAWD,EAAOE,oB,OCFbC,sBACb1C,aAXoB,SAACV,GACrB,MAAO,CAAEuC,YAAavC,EAAMuC,gBAEL,SAACc,GACxB,MAAO,CACLH,WAAY,SAACC,GACXE,EAASC,YAAuBH,SAMpChD,IAFaiD,CAIbd","file":"static/js/4.944fae58.chunk.js","sourcesContent":["import { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n    //беру из стейта\r\n});\r\n//на входе разные компоненты Component\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\r\n            //редирект если не залогинен\r\n          //пробовал свои мысли  if(this.props.dialogPages) alert(\"диалог\");\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n    let connectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return connectedAuthRedirectComponent;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1EAXw\",\"dialogsitem\":\"Dialogs_dialogsitem__274nt\",\"active\":\"Dialogs_active__3_5qL\",\"dialog\":\"Dialogs_dialog__30Ojv\",\"messages\":\"Dialogs_messages__2bhGl\"};","import { NavLink } from \"react-router-dom\";\r\nimport classes from \"./../Dialogs.module.css\";\r\nconst Dialogitem = (props) => {\r\n  return (\r\n    <div className={classes.dialog + \" \" + classes.active}>\r\n      <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n      <div className={classes.dialogsitem}>{props.avatar}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Dialogitem;","import classes from \"./../Dialogs.module.css\";\r\n\r\nconst Messages = (props) => {\r\n  return <div className={classes.messages}>{props.message}</div>;\r\n};\r\n\r\nexport default Messages;\r\n","import Dialogitem from \"./Dialogitem/Dialogitem\";\r\nimport classes from \"./Dialogs.module.css\";\r\nimport Messages from \"./Messages/Messages\";\r\nimport React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../utils/validator/validators\";\r\nimport { textarea } from \"../common/FormControls/FormControls\";\r\nconst maxLength10=maxLengthCreator(8);\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogPages;\r\n  let dialogsElements = state.dialogs2.map((d) => (\r\n    <Dialogitem name={d.nname} id={d.id} avatar={d.avatar} />\r\n  ));\r\n  let messageElements = state.messages2.map((m) => (\r\n    <Messages message={m.message} />\r\n  ));\r\n  const addNewMessage = (values) => {\r\n    props.addDialogA(values.newDialog);//вызываю функцию из dialogsContainer;\r\n  }\r\n  return (\r\n    <div className={classes.dialogs}>\r\n      <div className={classes.dialogsitem}>{dialogsElements}</div>\r\n      <div className={classes.dialog}>{messageElements}</div>\r\n      <div className={classes.dialogsitem}>\r\n        <AddMessageReduxForm onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst addMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={textarea} name=\"newDialog\" placeholder=\"введите\"\r\n          validate={[required,maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button>Add dialog</button>\r\n      </div>\r\n    </form>\r\n    /*\r\n                onChange={onDialogChange}\r\n                //убрал ещё до редаксформ ref={newDialogElement}\r\n                value={newDialog}\r\n                placeholder=\"введите\"\r\n    */\r\n  )\r\n};\r\nconst AddMessageReduxForm = reduxForm({ form: \"dialogAddMessageForm\" })(addMessageForm);\r\nexport default Dialogs;\r\n","import { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { addDialogActionCreator } from \"../../Redux/dialogReduser\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { compose } from \"redux\";\r\nlet mapStateToProps = (state) => {\r\n  return { dialogPages: state.dialogPages };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addDialogA: (newDialog) => {\r\n      dispatch(addDialogActionCreator(newDialog));\r\n    },\r\n  };\r\n};\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n  //возьми Dialogs и закинь его в withAuthRedirect,а потом результат в connect(mapStateToProps...\r\n)(Dialogs)\r\n"],"sourceRoot":""}