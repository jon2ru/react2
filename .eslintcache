[{"C:\\Users\\рома\\Documents\\react2\\src\\index.js":"1","C:\\Users\\рома\\Documents\\react2\\src\\reportWebVitals.js":"2","C:\\Users\\рома\\Documents\\react2\\src\\App.js":"3","C:\\Users\\рома\\Documents\\react2\\src\\Redux\\sidebarReduser .js":"4","C:\\Users\\рома\\Documents\\react2\\src\\components\\Header\\HeaderContainer.jsx":"5","C:\\Users\\рома\\Documents\\react2\\src\\components\\Nav\\NavContainer.jsx":"6","C:\\Users\\рома\\Documents\\react2\\src\\components\\common\\Preloader\\Preloader.jsx":"7","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\ProfileContainer.jsx":"8","C:\\Users\\рома\\Documents\\react2\\src\\components\\Dialogs\\DialogsContainer.jsx":"9","C:\\Users\\рома\\Documents\\react2\\src\\hoc\\withAuthRedirect.js":"10","C:\\Users\\рома\\Documents\\react2\\src\\components\\Header\\Header.jsx":"11","C:\\Users\\рома\\Documents\\react2\\src\\components\\Nav\\Nav.jsx":"12","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\Profile.jsx":"13","C:\\Users\\рома\\Documents\\react2\\src\\components\\Nav\\Navitem.jsx":"14","C:\\Users\\рома\\Documents\\react2\\src\\components\\Dialogs\\Dialogitem\\Dialogitem.jsx":"15","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\Profileinfo\\Profileinfo.jsx":"16","C:\\Users\\рома\\Documents\\react2\\src\\components\\Dialogs\\Messages\\Messages.jsx":"17","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\MyPosts\\MyPostsContainer.jsx":"18","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\MyPosts\\MyPosts.jsx":"19","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\Profileinfo\\ProfileStatusWithHooks.jsx":"20","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\Profileinfo\\ProfileDataForm.jsx":"21","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx":"22","C:\\Users\\рома\\Documents\\react2\\src\\Redux\\app-Reduser.ts":"23","C:\\Users\\рома\\Documents\\react2\\src\\Redux\\dialogReduser.ts":"24","C:\\Users\\рома\\Documents\\react2\\src\\Redux\\profileReduser.ts":"25","C:\\Users\\рома\\Documents\\react2\\src\\Redux\\usersReduser.ts":"26","C:\\Users\\рома\\Documents\\react2\\src\\Redux\\new-store.ts":"27","C:\\Users\\рома\\Documents\\react2\\src\\components\\Users\\UsersContainer.tsx":"28","C:\\Users\\рома\\Documents\\react2\\src\\Redux\\users-selectors.ts":"29","C:\\Users\\рома\\Documents\\react2\\src\\components\\Users\\UsersApiContainer.tsx":"30","C:\\Users\\рома\\Documents\\react2\\src\\components\\Users\\Users.tsx":"31","C:\\Users\\рома\\Documents\\react2\\src\\components\\Users\\User.tsx":"32","C:\\Users\\рома\\Documents\\react2\\src\\components\\common\\paginator\\Pagination.tsx":"33","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\Profileinfo\\ProfileStatus.tsx":"34","C:\\Users\\рома\\Documents\\react2\\src\\api\\api.ts":"35","C:\\Users\\рома\\Documents\\react2\\src\\components\\Login\\Login.tsx":"36","C:\\Users\\рома\\Documents\\react2\\src\\utils\\validator\\validators.ts":"37","C:\\Users\\рома\\Documents\\react2\\src\\components\\common\\FormControls\\FormControls.tsx":"38","C:\\Users\\рома\\Documents\\react2\\src\\api\\profile-api.ts":"39","C:\\Users\\рома\\Documents\\react2\\src\\types\\types.ts":"40","C:\\Users\\рома\\Documents\\react2\\src\\api\\login-api.ts":"41","C:\\Users\\рома\\Documents\\react2\\src\\api\\security-api.ts":"42","C:\\Users\\рома\\Documents\\react2\\src\\api\\users-api.ts":"43","C:\\Users\\рома\\Documents\\react2\\src\\Redux\\authReduser.tsx":"44","C:\\Users\\рома\\Documents\\react2\\src\\components\\Dialogs\\Dialogs.jsx":"45","C:\\Users\\рома\\Documents\\react2\\src\\components\\Musik.jsx":"46","C:\\Users\\рома\\Documents\\react2\\src\\components\\Users\\UsersSearchForm.tsx":"47"},{"size":1229,"mtime":1649013393561,"results":"48","hashOfConfig":"49"},{"size":375,"mtime":1639674209140,"results":"50","hashOfConfig":"49"},{"size":3480,"mtime":1654975748222,"results":"51","hashOfConfig":"49"},{"size":566,"mtime":1639674209118,"results":"52","hashOfConfig":"49"},{"size":584,"mtime":1642880667492,"results":"53","hashOfConfig":"49"},{"size":591,"mtime":1639674209124,"results":"54","hashOfConfig":"49"},{"size":232,"mtime":1639674209140,"results":"55","hashOfConfig":"49"},{"size":2676,"mtime":1648922672772,"results":"56","hashOfConfig":"49"},{"size":716,"mtime":1654717504586,"results":"57","hashOfConfig":"49"},{"size":871,"mtime":1640716997189,"results":"58","hashOfConfig":"49"},{"size":476,"mtime":1642621133558,"results":"59","hashOfConfig":"49"},{"size":1592,"mtime":1639937527120,"results":"60","hashOfConfig":"49"},{"size":582,"mtime":1648148343051,"results":"61","hashOfConfig":"49"},{"size":439,"mtime":1639674209124,"results":"62","hashOfConfig":"49"},{"size":383,"mtime":1639674209124,"results":"63","hashOfConfig":"49"},{"size":3542,"mtime":1648410022216,"results":"64","hashOfConfig":"49"},{"size":180,"mtime":1639674209124,"results":"65","hashOfConfig":"49"},{"size":1717,"mtime":1653508224972,"results":"66","hashOfConfig":"49"},{"size":2131,"mtime":1648323797142,"results":"67","hashOfConfig":"49"},{"size":1920,"mtime":1647712093117,"results":"68","hashOfConfig":"49"},{"size":1477,"mtime":1648322914448,"results":"69","hashOfConfig":"49"},{"size":428,"mtime":1639674209140,"results":"70","hashOfConfig":"49"},{"size":1932,"mtime":1653246845002,"results":"71","hashOfConfig":"49"},{"size":2100,"mtime":1654717504528,"results":"72","hashOfConfig":"49"},{"size":4971,"mtime":1654717504551,"results":"73","hashOfConfig":"49"},{"size":5839,"mtime":1655063565067,"results":"74","hashOfConfig":"49"},{"size":1568,"mtime":1653417008073,"results":"75","hashOfConfig":"49"},{"size":1952,"mtime":1655148932381,"results":"76","hashOfConfig":"49"},{"size":1148,"mtime":1655148871290,"results":"77","hashOfConfig":"49"},{"size":2862,"mtime":1655149773383,"results":"78","hashOfConfig":"49"},{"size":1261,"mtime":1655062007659,"results":"79","hashOfConfig":"49"},{"size":2031,"mtime":1655059139436,"results":"80","hashOfConfig":"49"},{"size":2766,"mtime":1650481396278,"results":"81","hashOfConfig":"49"},{"size":2211,"mtime":1650480618768,"results":"82","hashOfConfig":"49"},{"size":786,"mtime":1653243247528,"results":"83","hashOfConfig":"49"},{"size":3733,"mtime":1654717504588,"results":"84","hashOfConfig":"49"},{"size":443,"mtime":1651519130357,"results":"85","hashOfConfig":"49"},{"size":1790,"mtime":1651689656134,"results":"86","hashOfConfig":"49"},{"size":1203,"mtime":1654024403097,"results":"87","hashOfConfig":"49"},{"size":735,"mtime":1650050251822,"results":"88","hashOfConfig":"49"},{"size":857,"mtime":1653243401987,"results":"89","hashOfConfig":"49"},{"size":252,"mtime":1653244477654,"results":"90","hashOfConfig":"49"},{"size":1088,"mtime":1655063249901,"results":"91","hashOfConfig":"49"},{"size":3655,"mtime":1653419064201,"results":"92","hashOfConfig":"49"},{"size":1824,"mtime":1654717504573,"results":"93","hashOfConfig":"49"},{"size":1721,"mtime":1654976292074,"results":"94","hashOfConfig":"49"},{"size":1239,"mtime":1655149982975,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"18784x4",{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"98"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"98"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"98"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"98"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"98"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"98"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"98"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"98"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"98"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"98"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"98"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"154"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"154"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"154"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"154"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"154"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"154"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"154"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\рома\\Documents\\react2\\src\\index.js",[],["210","211"],"C:\\Users\\рома\\Documents\\react2\\src\\reportWebVitals.js",[],"C:\\Users\\рома\\Documents\\react2\\src\\App.js",["212"],"import React, { Suspense } from 'react';\r\nimport \"./App.css\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport { Route, Switch, withRouter, Redirect } from \"react-router-dom\";\r\nimport NavContainer from \"./components/Nav/NavContainer\";\r\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport Musik from \"./components/Musik\";\r\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport QplOogin from \"./components/Login/Login\";\r\nimport { initializeApp } from \"./Redux/app-Reduser\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n// ленивая загрузка почему-то работает внизу импортов\r\nclass App extends React.Component {\r\n  catchAllUnhandledError = (promiseRejectionEvent) => {\r\n    alert(\"Some error\");\r\n    // console.error(promiseRejectionEvent);\r\n    //reason, promiseRejectionEvent-почитать\r\n  }\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n    window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledError );\r\n  //  глобальная  обработка ошибок\r\n  } \r\n  //END componentDidMount\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledError );\r\n  }\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader />\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <HeaderContainer />\r\n        <NavContainer\r\n        /* store={props.store}\r\n            friends={props.stateaa.dialogPages.dialogs2}\r\n      так как взял отсюда , то при изменении Dialogs.jsx\r\n      меняется и в Nav.jsx \r\n        sideavata={props.stateaa.sidebar}*/\r\n        />\r\n\r\n        <div className=\"app-content\">\r\n          {/* <Route /> */}\r\n          <Suspense fallback={<div>Загрузка...</div>}>\r\n            <section>\r\n              <Route path=\"/dialogs/\" render={() => <DialogsContainer />} />\r\n              <Route path=\"/musik/\" render={() => <Musik />} />\r\n              <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\r\n              {/* знак вопроса обозначает ,что может и не быть userId . это для withRouter */}\r\n            </section>\r\n          </Suspense>\r\n          <Route path=\"/users\" render={() => <UsersContainer pageTitle={'Samuray'}/>} />\r\n          {/* Samuray собственные пропсы */}\r\n          <Route path=\"/login/\" render={() => <QplOogin />} />\r\n          <Route exact path=\"/\" render={() => <Redirect from=\"/\" to=\"/profile\" />} />\r\n          {/* <Route path=\"*\" render={() => <div>404 NOT FOUND</div>} /> */}\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized\r\n});\r\nexport default compose(withRouter,\r\n  connect(mapStateToProps, { initializeApp }))(App);\r\n/*   когда connect(им) компоненту сбивается роут поэтому добавлен withRouter\r\n  ,но вроде уже пофиксили эту ошибку и можно не добавлять */\r\n","C:\\Users\\рома\\Documents\\react2\\src\\Redux\\sidebarReduser .js",["213","214","215"],"let initialState = [\r\n  {\r\n    img2: (\r\n      <img src=\"https://i0.wp.com/andrey-eltsov.ru/wp-content/uploads/2018/02/SmailikSbor3.jpg\" />\r\n    ),\r\n  },\r\n  {\r\n    img2: (\r\n      <img src=\"https://i0.wp.com/andrey-eltsov.ru/wp-content/uploads/2018/02/SmailikSbor3.jpg\" />\r\n    ),\r\n  },\r\n  {\r\n    img2: (\r\n      <img src=\"https://i0.wp.com/andrey-eltsov.ru/wp-content/uploads/2018/02/SmailikSbor3.jpg\" />\r\n    ),\r\n  },\r\n];\r\nconst sidebarReduser = (state = initialState, action) => {\r\n  //let stateCopy={...state};\r\n  return state;\r\n};\r\nexport default sidebarReduser;\r\n","C:\\Users\\рома\\Documents\\react2\\src\\components\\Header\\HeaderContainer.jsx",["216"],"import * as axios from \"axios\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../Redux/authReduser\";\r\nimport Header from \"./Header\";\r\nclass HeaderContainer extends React.Component {\r\n  /* componentDidMount() {\r\n    this.props.getAuthDataUser();\r\n  } //END componentDidMount */\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n} //END HeaderContainer\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login\r\n});\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);\r\n","C:\\Users\\рома\\Documents\\react2\\src\\components\\Nav\\NavContainer.jsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\common\\Preloader\\Preloader.jsx",["217"],"import React from \"react\";\r\nimport preloader from \"../../../assets/images/Spinner-1s-200px.svg\";\r\nlet Preloader = (props) => {\r\n  return (\r\n    <div>\r\n      <img src={preloader} />\r\n    </div> \r\n  );\r\n};\r\nexport default Preloader;\r\n","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\ProfileContainer.jsx",["218"],"import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { profilesData, getStatus, updateUserStatus,savePhoto,saveProfile } from \"../../Redux/profileReduser\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  // чтобы код не писать дважды ниже создам refreshProfile\r\n  refreshProfile(){\r\n    let userIdd = this.props.match.params.userId\r\n    /*когда вызывается withRouter из url метод match возвращает params-userId\r\n    и получаю id юзера*/\r\n    if (!userIdd) {\r\n      userIdd = this.props.authorizedUserId;\r\n    }\r\n   /*  if (!userIdd) {\r\n      this.props.history.push(\"/login\");\r\n      когда жму кнопку вылогиниться нужно уйти из профиля,\r\n      но вроде и так срабатывает withAuthRedirect,\r\n       а это \"програмный\" редирект\r\n    } */\r\n    this.props.profilesData(userIdd);\r\n    this.props.getStatus(userIdd);\r\n    //вызываю thunk из редюсера\r\n  }\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  } //end componentDidMount\r\n  componentDidUpdate(prevProps,prevState,snapshot){\r\n    if (this.props.match.params.userId !=prevProps.match.params.userId){\r\n      this.refreshProfile();\r\n    }\r\n    // match из withRouter\r\n    // чтобы с чужого профиля переходить на свой при нажатии на profile\r\n  }\r\n  render() {\r\n    return <Profile {...this.props}\r\n              isOwner={!this.props.match.params.userId}\r\n              // если нет userId\r\n              status={this.props.status}\r\n              updateUserStatus={this.props.updateUserStatus}\r\n              profile={this.props.profile}/*profile={this.props.profile} -был заккоментирован*/ \r\n              savePhoto={this.props.savePhoto}/>\r\n  }\r\n} //end ProfileContainer\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.id,\r\n  isAuth: state.auth.isAuth,\r\n});\r\nexport default compose(\r\n  connect(mapStateToProps, { profilesData, getStatus, updateUserStatus,savePhoto,saveProfile}),\r\n  withAuthRedirect,\r\n  //withRouter получаю из url нужную часть\r\n  withRouter\r\n)(ProfileContainer);\r\n//возьми ProfileContainer и закинь его в withRouter--> withAuthRedirect,а \r\n// потом результат в connect(mapStateToProps...\r\n","C:\\Users\\рома\\Documents\\react2\\src\\components\\Dialogs\\DialogsContainer.jsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\hoc\\withAuthRedirect.js",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Header\\Header.jsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Nav\\Nav.jsx",["219","220"],"import { NavLink } from \"react-router-dom\";\r\nimport classes from \"./Nav.module.css\";\r\nimport Navitem from \"./Navitem\";\r\nconst Nav = (props) => {\r\n  let navElements = props.friends.map((d) => (\r\n    <Navitem name={d.nname} id={d.id} avatar={d.avatar} />\r\n  ));\r\n    let nifElements = props.sideavata.map((m) => (\r\n      <Navitem foto={m.img2} />\r\n    ));\r\n  return (\r\n    <nav className={classes.nav}>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/profile\" activeClassName={classes.activeLink}>\r\n          Profile\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/dialogs\" activeClassName={classes.active}>\r\n          Dialogs\r\n        </NavLink>\r\n        {/* activeClassName стиль активной ссылки */}\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/users\" activeClassName={classes.active}>\r\n          Users\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <a>News</a>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/musik\">Music</NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/login\">Login</NavLink>\r\n      </div>\r\n      <div className={`${classes.item} ${classes.aert}`}>\r\n        {/* 2 стиля для одного элемента перестало работать*/}\r\n        <a>Settings</a>\r\n      </div>\r\n      <div> FRIENDS:</div>\r\n      <div className={classes.navitem}>\r\n        {navElements}\r\n         {nifElements} \r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\Profile.jsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Nav\\Navitem.jsx",["221"],"import { NavLink } from \"react-router-dom\";\r\nimport classes from \"./Nav.module.css\";\r\nconst Navitem = (props) => {\r\n \r\n  return (\r\n    <div className={classes.friends}>\r\n     <div className={classes.nu}>{props.name}{props.foto}</div>\r\n      {/* <div className={classes.mnu}>{props.name}{props.foto}</div>\r\n     <div className={classes.pnu}>{props.name}{props.foto}</div>\r\n      */}\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navitem;\r\n","C:\\Users\\рома\\Documents\\react2\\src\\components\\Dialogs\\Dialogitem\\Dialogitem.jsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\Profileinfo\\Profileinfo.jsx",["222","223","224","225"],"\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport classes from \"./Profileinfo.module.css\"\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"./../../../assets/images/users.png\";\r\nimport { useState } from \"react\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nconst Profileinfo = (props) => {\r\n  let [editMode,setEditMode]= useState(false)\r\n//    деструктуризация массива\r\n//    useState сидит в библиотеке react\r\n//useState возвращает первым номером значение и 2м ф. \r\n// которая меняет это значение(1-editMode,2-setEditMode)\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  }\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      // если фото имеет длинну-не пустая\r\n      props.savePhoto(e.target.files[0])\r\n      // то возьми это фото\r\n      console.log(props.savePhoto)\r\n    }\r\n  }\r\n  const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(()=>{\r\n         setEditMode(false);\r\n        });\r\n        // async await не сработал\r\n    }\r\n  return (\r\n    <div>\r\n      <img src=\"https://i.pinimg.com/originals/f5/39/b6/f539b6967cb0f250d4e05cc133a8c87d.jpg\" width=\"800\" height=\"400\" />\r\n      {/* пляж */}\r\n      <div className={classes.descr}>\r\n        <img src={props.profile.photos.large || userPhoto} className={classes.avatar} />\r\n        {props.isOwner && <input type=\"file\" onChange={onMainPhotoSelected} />}\r\n        {/* если есть isOwner покажи кнопку с выбором файла */}\r\n       {editMode?\r\n       <ProfileDataForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit}/>:\r\n      //  initialValues метод redux-form. При перезагрузке страницы ,\r\n      //  чтобы сохранялись в input и textarea введенные значения\r\n       <ProfileData goToEditMode={()=>{setEditMode(true)}} isOwner={props.isOwner} profile={props.profile} />}\r\n        {/* тринарное выражение на верху */}\r\n        <ProfileStatusWithHooks status={props.status}\r\n          updateUserStatus={props.updateUserStatus} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst ProfileData = ({ profile,isOwner,goToEditMode }) => {\r\n  return <div>\r\n    {isOwner&&<div><button onClick={goToEditMode}>edit</button></div>}\r\n    <div>avat+descr</div>\r\n    <div>Имя:{profile.fullName}</div>\r\n    <div>обо мне: {profile.aboutMe}</div>\r\n    <div>ищешь работу?{profile.lookingForAJob == true ? 'Да' : 'Нет'}</div>\r\n    <div>\r\n      какую хочешь работу? {profile.lookingForAJobDescription}\r\n    </div>\r\n    <div>\r\n      контакты:{Object.keys(profile.contacts).map(key => {\r\n        // Object.keys(obj) – возвращает массив ключей.\r\n        return <Contacts key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n        // contactValue  пример: let abv={\r\n        //  github: qwerty\r\n        //     vk: trytry\r\n        //     facebook: popop}\r\n        //     abv[facebook] вернет popop\r\n        // key={key} зачем не понял\r\n      })}\r\n    </div>\r\n  </div>\r\n}\r\nconst Contacts = ({ contactTitle, contactValue }) => {\r\n  return <div className={classes.contact}>\r\n    {contactTitle}:{contactValue}\r\n  </div>\r\n}\r\n\r\nexport default Profileinfo;\r\n","C:\\Users\\рома\\Documents\\react2\\src\\components\\Dialogs\\Messages\\Messages.jsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\MyPosts\\MyPostsContainer.jsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\MyPosts\\MyPosts.jsx",["226"],"import classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validator/validators\";\r\nimport { input } from \"../../common/FormControls/FormControls\";\r\n// console.log(MyPosts);\r\nconst maxLength10=maxLengthCreator(10);\r\nconst MyPosts =React.memo(props => {\r\n  // React.memo если пропсы не поменялись.то не рендерь\r\n  let postElement = props.post.map((p) => (\r\n    <Post key={p.id} message={p.message} count={p.count} />\r\n  ));\r\n  let newPostElement = React.createRef(); /* 31 реакт создай ссылку*/\r\n  let addhhPost = (values) => {\r\n    // let newtext = newPostElement.current.value; -перенес в state\r\n    props.addPost(values.newPostText);\r\n    //props.dispatch(addhhPostActionCreator());\r\n    /*31,32 вызываю функцию addPost\r\n      в state.js */\r\n    /* props.updatenewPost('');обнуляю значение в textarea \r\n    -перенес в state.js */\r\n  };\r\n  // let onPostChange = () => {\r\n  //   let newtext5 = newPostElement.current.value;\r\n  //   props.updateNewPostText(newtext5);\r\n  //   //let action=(onPostChangeActionCreator(newtext5))\r\n  //   //создал action для примера чтобы видеть процесс\r\n  //   //props.dispatch(action);\r\n  //   //при изменении в textarea передаю данные в state.js\r\n  // };\r\n  return (\r\n    <div className={classes.post}>\r\n      <h2>My Post</h2>\r\n      <div>\r\n        <PostReduxForm onSubmit={addhhPost}/>\r\n      </div>\r\n      <div className={classes.newpost}>{postElement}</div>\r\n    </div>\r\n  );\r\n});\r\nconst myPostForm= (props) => {\r\n  return(\r\n  <form onSubmit={props.handleSubmit}>\r\n    <div>\r\n      <Field component={input} name=\"newPostText\" placeholder=\"введите\" \r\n      validate={[required,maxLength10]} />\r\n    </div>\r\n    <div>\r\n      <button >Add post</button>\r\n    </div>\r\n  </form>\r\n  )\r\n};\r\nconst PostReduxForm = reduxForm({ form: \"myPostText\" })(myPostForm);\r\nexport default MyPosts;\r\n","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\Profileinfo\\ProfileStatusWithHooks.jsx",["227","228"],"import classes from \"./Profileinfo.module.css\"\r\nimport React, { useState, useEffect } from \"react\";\r\n// import { useEffect } from \"react\";\r\n\r\nconst ProfileStatusWithHooks= (props) =>{\r\n   let [editMode,setEditMode]= useState(false)\r\n//    деструктуризация массива\r\n//    useState сидит в библиотеке react\r\n//useState возвращает первым номером значение и 2м ф. \r\n// которая меняет это значение(1-editMode,2-setEditMode)\r\nlet [status,setStatus]= useState(props.status)\r\n// раздробил локальный стейт на 2 части\r\nuseEffect( ()=>{\r\n    setStatus=(props.status);\r\n},[props.status])\r\n// зависишь от [props.status] если он поменялся то отрисуй\r\n// useEffect срабатывает после отрисовки компоненты\r\nconst activateEditMode = () => {\r\n  setEditMode(true)\r\n}\r\nconst deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateUserStatus(status);\r\n}\r\nconst onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n    // закидываю вводимые символы в props.status\r\n}\r\n            return (\r\n            <div>{!editMode&&//если editMode в стейте=false ,то...\r\n                <div>\r\n                   <b>status:</b> <span onDoubleClick={activateEditMode}>{props.status ||\"no status\"}</span>\r\n                </div>\r\n            }\r\n                {editMode &&\r\n                    <div>\r\n                        <input onChange={onStatusChange} \r\n                        // при изменениии в input\r\n                        value={status}\r\n                         autoFocus={true}\r\n                          onBlur={deactivateEditMode} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    \r\n};\r\nexport default ProfileStatusWithHooks;\r\n","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\Profileinfo\\ProfileDataForm.jsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx",["229"],"import classes from \"./Post.module.css\";\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={classes.item}>\r\n      <img src=\"http://pngimg.com/uploads/spongebob/spongebob_PNG8.png\" />\r\n      {/* <img src=\"https://kurer-sreda.ru/wp-contenpt/uloads/2020/06/1-48-800x663.png\" /> */}\r\n\r\n      {props.message}\r\n      <div>\r\n        <span>Like {props.count}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","C:\\Users\\рома\\Documents\\react2\\src\\Redux\\app-Reduser.ts",[],["230","231"],"C:\\Users\\рома\\Documents\\react2\\src\\Redux\\dialogReduser.ts",["232"],"import { BaseThunkType, InferActionsTypes } from \"./new-store\";\r\n\r\nexport type initialStateType = typeof initialState\r\ntype ActionTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionTypes>\r\ntype dialogType = {\r\n  id: number\r\n  nname: string\r\n\r\n}\r\ntype messageType = {\r\n  id: number\r\n  message: string\r\n}\r\n\r\nlet initialState = {\r\n  dialogs2: [\r\n    {\r\n      id: 1,\r\n      nname: \"Dimich\",\r\n      // avatar: (\r\n      //   <img src=\"http://pngimg.com/uploads/spongebob/spongebob_PNG8.png\" />\r\n      // ),\r\n    },\r\n\r\n    {\r\n      id: 2,\r\n      nname: \"Roma\",\r\n      // avatar: (\r\n      //   <img src=\"http://pngimg.com/uploads/spongebob/spongebob_PNG8.png\" />\r\n      // ),\r\n    },\r\n    {\r\n      id: 3,\r\n      nname: \"Petiya\",\r\n      // avatar: (\r\n      //   <img src=\"http://pngimg.com/uploads/spongebob/spongebob_PNG8.png\" />\r\n      // ),\r\n    },\r\n    {\r\n      id: 4,\r\n      nname: \"Igor\",\r\n      // avatar: (\r\n      //   <img src=\"http://pngimg.com/uploads/spongebob/spongebob_PNG8.png\" />\r\n      // ),\r\n    },\r\n  ] as Array<dialogType>,\r\n  //newDialog: \"\",\r\n  messages2: [\r\n    { id: 1, message: \"привет\" },\r\n    { id: 2, message: \"позвони мне\" },\r\n    { id: 3, message: \"напиши номер\" },\r\n  ] as Array<messageType>\r\n};\r\nconst dialogReduser = (state = initialState, action: ActionTypes): initialStateType => {\r\n  switch (action.type) {\r\n    case \"ADD_NEW_DIALOG\":\r\n      return {\r\n        ...state,\r\n        dialogs2: [...state.dialogs2, {\r\n          id: 5,\r\n          nname: action.newDialog,\r\n          // avatar: (\r\n          //   <img src=\"http://pngimg.com/uploads/spongebob/spongebob_PNG8.png\" />\r\n          // )\r\n        }], /* урок 32 */\r\n        //newDialog: \"\" // стираю текст в textarea\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const actions = {\r\n  addDialogActionCreator: (newDialog: string) =>\r\n    ({ type: \"ADD_NEW_DIALOG\", newDialog } as const)\r\n}\r\nexport default dialogReduser;\r\n/*если функция только возвращает значение то можно без ретюрн*/","C:\\Users\\рома\\Documents\\react2\\src\\Redux\\profileReduser.ts",["233","234"],"import { ThunkAction } from 'redux-thunk';\r\nimport { BaseThunkType, InferActionsTypes } from './new-store';\r\nimport { profileApi } from '../api/profile-api';\r\nimport { FormAction, stopSubmit } from 'redux-form';\r\nimport { photosType, postType, profileType} from \"../types/types\";\r\nimport { Dispatch } from 'redux';\r\nexport type initialStateType = typeof initialState\r\ntype ActionTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionTypes |FormAction>\r\nlet initialState = {\r\n  post: [\r\n    { id: 1, message: \"Как дела\", count: 2 },\r\n    { id: 2, message: \"нормально\", count: 5 },\r\n  ] as Array<postType>,\r\n  //newPostText: \"\",\r\n  profile: null as profileType | null,\r\n  status: \"\",\r\n  newPostText: \"\"\r\n};\r\n//начальный state\r\nconst profileReduser = (state = initialState, action: ActionTypes): initialStateType => {\r\n  switch (action.type) {\r\n    case \"ADD_POST\":\r\n      // скобка {} чтобы писать одну и ту же переменную\r\n      // let stateCopy тут и ниже\r\n      let newPost = {\r\n        id: 3,\r\n        message: action.newPostText,\r\n        count: 0,\r\n      };\r\n      return {\r\n        ...state,\r\n        post: [...state.post, newPost],\r\n        //it is array []\r\n        // newPostText: \"\", // стираю текст в textarea\r\n        //после return функция не выполняется это вместо break\r\n      };\r\n    case \"SET_USER_PROFILE\":\r\n      return {\r\n        ...state,\r\n        profile: action.profile,\r\n      };\r\n    case \"GET_STATUS\":\r\n      return {\r\n        ...state,\r\n        status: action.status,\r\n      };\r\n    case \"SAVE_PHOTO_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        profile: {\r\n          ...state.profile,\r\n          photos: action.photos\r\n        } as profileType// после испаравить\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport type SavePhotosResponceDataType = {\r\n  photos: photosType\r\n}\r\n// выше добавил photos в описании к api у димыча на сайте не правильно нет api а должен быть\r\nexport const actions = {\r\n  addhhPostActionCreator: (newPostText: string) => ({ type: \"ADD_POST\", newPostText } as const),\r\n  setUserProfile: (profile: profileType) => ({ type: \"SET_USER_PROFILE\", profile, } as const),\r\n  getuStatus: (status: string) => ({ type: \"GET_STATUS\", status, } as const),\r\n  savePhotoSuccess: (photos: photosType) => ({ type: \"SAVE_PHOTO_SUCCESS\", photos, } as const)\r\n};\r\n//thunk\r\n// type DispatchType = Dispatch<ActionTypes>\r\n// type GetStateType = () => AppStateType\r\n// type ThunkType = ThunkAction<Promise<void>\r\n//   , AppStateType, unknown, ActionTypes>\r\nexport const profilesData = (userIdd: number): ThunkType => async (dispatch) => {\r\n  // return (dispatch) => {\r\n  let data = await profileApi.getProfileApi(userIdd)\r\n\r\n  dispatch(actions.setUserProfile(data));\r\n  //   });\r\n  // }\r\n}\r\nexport const getStatus = (userIdd: number): ThunkType => async (dispatch) => {\r\n  // return (dispatch) => {\r\n  let data = await profileApi.getUserStatus(userIdd)\r\n  // .then((response) => {\r\n  //запрос в api.js получить статус\r\n  dispatch(actions.getuStatus(data));\r\n  //   });\r\n  // }\r\n}\r\nexport const updateUserStatus = (status: string): ThunkType => async (dispatch) => {\r\n  // return (dispatch) => {\r\n  let data = await profileApi.updateStatus(status)\r\n  // .then((response) => {\r\n  //запрос в api.js установить статус\r\n  if (data.resultCode === 0) {\r\n    dispatch(actions.getuStatus(status));\r\n  }\r\n  //вызывается тот же экшн креатор ,что и выше  и обновляется status\r\n  //   });\r\n  // }\r\n}\r\nexport const savePhoto = (file: File): ThunkType => async (dispatch) => {\r\n  // return (dispatch) => {\r\n  let data = await profileApi.savePhoto(file)\r\n  //запрос в api.js \r\n  if (data.resultCode === 0) {\r\n    dispatch(actions.savePhotoSuccess(data.data.photos));\r\n  }\r\n}\r\nexport const saveProfile = (profile: profileType): ThunkType => async (dispatch, getState) => {\r\n  const useruidi = getState().auth.id\r\n  // getState достал значение из глобального стейта \r\n  let data = await profileApi.saveProfile(profile)\r\n  //запрос в api.js .Сохранил изменения профиля на сервере \r\n  if (data.resultCode === 0) {\r\n    if (useruidi !=null){\r\n    dispatch(profilesData(useruidi));\r\n    //  обновил профиль\r\n      }else {throw new Error (\"useruidi can't be null\")}\r\n  }\r\n  else {\r\n    dispatch(stopSubmit(\"edit-profile\", { \"contacts\": { \"facebook\": data.messages[0] } }));\r\n    // contacts- объект facebook-ключ в объекте.\r\n    //  Надо распарсить строку и сделать для всех input\r\n    return Promise.reject(data.messages[0])\r\n  }\r\n}\r\nexport default profileReduser;\r\n","C:\\Users\\рома\\Documents\\react2\\src\\Redux\\usersReduser.ts",["235","236","237","238"],"C:\\Users\\рома\\Documents\\react2\\src\\Redux\\new-store.ts",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Users\\UsersContainer.tsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\Redux\\users-selectors.ts",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Users\\UsersApiContainer.tsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Users\\Users.tsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Users\\User.tsx",["239","240","241"],"C:\\Users\\рома\\Documents\\react2\\src\\components\\common\\paginator\\Pagination.tsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\Profileinfo\\ProfileStatus.tsx",["242"],"import classes from \"./Profileinfo.module.css\"\r\nimport React, { ChangeEvent } from \"react\";\r\n//  отключен\r\n//  отключен\r\n//  отключен\r\n//  отключен\r\n//  отключен\r\n//  отключен\r\ntype PropsType={\r\n    status:string\r\n    updateUserStatus:(status:string)=>void\r\n}\r\ntype StateType={\r\n    editMode:boolean\r\n    status:string\r\n}\r\nclass ProfileStatus extends React.Component<PropsType,StateType> {\r\n    state = {\r\n        editMode: true,\r\n        status: this.props.status\r\n    }\r\n    //локальный стейт\r\n    activateEditMode = () => {\r\n        this.setState(\r\n            { editMode: true }\r\n        );\r\n    };\r\n    //setState -- метод React.Component\r\n    //setState асинхронен\r\n    deactivateEditMode = () => {\r\n        this.setState(\r\n            { editMode: false }\r\n        );\r\n        this.props.updateUserStatus(this.state.status);\r\n        //взял status из локального state\r\n    };\r\n    //урок 71 фокус\r\n    onStatusChange = (e:ChangeEvent<HTMLInputElement>) => {\r\n        // ChangeEvent импортировал из react for TypeScript\r\n        this.setState(\r\n            { status: e.currentTarget.value });\r\n    }\r\n    componentDidUpdate(prevProps:PropsType, prevState:StateType) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState(\r\n                { status: this.props.status }\r\n            );\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div>{!this.state.editMode &&\r\n                //если editMode в стейте=false ,то...\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || \"no status\"}</span>\r\n                </div>\r\n            }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange}/*хз так как value зафиксирован*/\r\n                            autoFocus={true}\r\n                            onBlur={this.deactivateEditMode} value={this.state.status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n};\r\nexport default ProfileStatus;\r\n","C:\\Users\\рома\\Documents\\react2\\src\\api\\api.ts",["243"],"import axios, { AxiosResponse } from \"axios\";\r\nimport { UserType } from \"../types/types\";\r\n// * as убрал\r\nexport type ApiResponceType<D ={},RC=ResultCodeEnum> ={\r\n  // D ={} --по умолчанию пустой объект\r\n  data:D\r\n  messages:Array<string>\r\n  resultCode:RC\r\n}\r\n\r\nexport const instance = axios.create({\r\n  withCredentials: true,/* передать куку*/\r\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n  headers: { \"API-KEY\": \"66060485-250e-40e6-994f-36765b804827\" },\r\n});\r\n//instance- задал параметры\r\nexport enum ResultCodeEnum{\r\n  Success=0,\r\n  Error=1\r\n}\r\nexport enum ResultCodeforCaptchaEnum{\r\n  CaptchaIsRequired=10\r\n}\r\nexport type getItemsType={\r\n  items:Array<UserType>\r\n  totalCount: number,\r\n  error: string|null\r\n}\r\n","C:\\Users\\рома\\Documents\\react2\\src\\components\\Login\\Login.tsx",["244","245"],"import React, { FC } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { InjectedFormProps, reduxForm } from \"redux-form\";\r\nimport { required } from \"../../utils/validator/validators\";\r\nimport { input } from \"../common/FormControls/FormControls\";\r\nimport { login } from \"../../Redux/authReduser\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport styles from \"../common/FormControls/FormControls.module.css\";\r\nimport { createField } from \"../common/FormControls/FormControls\";\r\nimport { AppStateType } from \"../../Redux/new-store\";\r\ntype LoginFormOwnProps={\r\n  capchaUrl:string|null\r\n}\r\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType,LoginFormOwnProps>& LoginFormOwnProps > = \r\n({ handleSubmit, error, capchaUrl }) => {\r\n  return <form onSubmit={handleSubmit}>\r\n    {createField<LoginFormValuesTypeKeys>(\"Email\", \"email\", [required], input,)}\r\n    {createField<LoginFormValuesTypeKeys>(\"Password\", \"password\", [required], input, { type: \"password\" })}\r\n    {createField<LoginFormValuesTypeKeys>(undefined, \"rememberMe\", [], input, { type: \"checkbox\" }, \"remember me\")}\r\n    {/*          <LoginFormValuesTypeKeys> описание ниже */}\r\n    {/* ниже капча */}\r\n    {capchaUrl && <img src={capchaUrl} />}\r\n    {capchaUrl && createField<LoginFormValuesTypeKeys>(\"Введите капчу\", \"captcha\", [required], input, {})}\r\n\r\n    {error && <div className={styles.formSummaryError}>\r\n      {error}\r\n    </div>}\r\n    <div>\r\n      <button>Login</button>\r\n    </div>\r\n  </form>\r\n  //внутри handleSubmit находится formData\r\n};\r\nconst LoginReduxForm = reduxForm<LoginFormValuesType,LoginFormOwnProps>({ form: \"login\" })(LoginForm);\r\n/*обворачиваем (хоком reduxForm) компоненту LoginForm\r\n и получаем контейнерную  компоненту LoginReduxForm */\r\ntype MapStateToPropsType = {\r\n  isAuth: boolean,\r\n  capchaUrl: string | null\r\n}\r\ntype MapDispatchPropsType = {\r\n  login: (email: string, password: string, rememberMe: boolean, captcha: string) => void\r\n}\r\ntype LoginFormValuesType = {\r\n  email: string,\r\n  password: string,\r\n  rememberMe: boolean,\r\n  captcha: string\r\n}\r\ntype LoginFormValuesTypeKeys=Extract <keyof LoginFormValuesType,string>\r\n// LoginFormValuesType,string если строка то возьми ключи\r\n// получил ключи email,password,rememberMe,captcha и выше вставил их в createField<LoginFormValuesTypeKeys>\r\n// теперь если напишу другой ключ будет ошибка\r\nconst Login2: React.FC<MapStateToPropsType & MapDispatchPropsType> = (props) => {\r\n  const aonSubmit = (formData: LoginFormValuesType) => {\r\n    //75 урок 32:00 formData значение из reduxForm->handleSubmit\r\n    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    //login с маленькой\r\n    //78 18:40 логинизация\r\n    //console.log(formData);\r\n    //без console.log не работает\r\n    /* mapStateToProps = (state) => {\r\n      return { form: state.form };\r\n    };\r\n    let mapDispatchToProps = (dispatch) => {\r\n      return {\r\n        onSubmit: () => {\r\n          dispatch(onSubmitAC());\r\n        },\r\n      };\r\n    };*/\r\n  }\r\n  if (props.isAuth) {\r\n    return <Redirect to={'/profile'} />\r\n  }\r\n  return <div>\r\n    <h1>LOGIN</h1>\r\n    <LoginReduxForm onSubmit={aonSubmit} capchaUrl={props.capchaUrl} />\r\n  </div>\r\n};\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\r\n  isAuth: state.auth.isAuth,\r\n  capchaUrl: state.auth.capchaUrl\r\n})\r\nexport default connect(mapStateToProps, { login })(Login2);\r\n//login приходит из authReduser login с маленькой\r\n","C:\\Users\\рома\\Documents\\react2\\src\\utils\\validator\\validators.ts",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\common\\FormControls\\FormControls.tsx",["246"],"import { FieldValidatorType } from '../../../utils/validator/validators';\r\nimport React from \"react\";\r\nimport styles from \"./FormControls.module.css\";\r\nimport { Field, WrappedFieldMetaProps, WrappedFieldProps } from \"redux-form\";\r\n// type FormControlParamtype={\r\n//     meta:WrappedFieldMetaProps\r\n//         }\r\nexport const textarea: React.FC<WrappedFieldProps> = ({ input, meta, ...props }) => {\r\n    //это рестоператор.props содержит все кроме input и meta\r\n    /* WrappedFieldProps взял внутри Field\r\n     }*/\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div> <textarea {...input} {...props} /> </div>\r\n            {hasError && <span>{meta.error} </span>}\r\n        </div>\r\n )\r\n}\r\nexport const input: React.FC<WrappedFieldProps> = ({ input, meta, ...props }) => {\r\n    //это рестоператор.props содержит все кроме input и meta\r\n    const hasError = meta.touched && meta.error\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div> <input {...input} {...props} /> </div>\r\n            {hasError && <span>{meta.error} </span>}\r\n        </div>\r\n )\r\n}\r\nexport function createField<FormKeysType extends string>(placeholder: string | undefined,\r\n    // extends string чтобы  name не выдавала ошибку\r\n    name: FormKeysType,\r\n    validators: Array<FieldValidatorType>,\r\n    component: React.FC<WrappedFieldProps>,\r\n    props = {}, text = \"\") {\r\n    return <div> <Field placeholder={placeholder}\r\n        name={name}\r\n        validate={validators}\r\n        component={component}\r\n        {...props} />{text}\r\n    </div>\r\n}","C:\\Users\\рома\\Documents\\react2\\src\\api\\profile-api.ts",[],"C:\\Users\\рома\\Documents\\react2\\src\\types\\types.ts",[],"C:\\Users\\рома\\Documents\\react2\\src\\api\\login-api.ts",[],"C:\\Users\\рома\\Documents\\react2\\src\\api\\security-api.ts",[],"C:\\Users\\рома\\Documents\\react2\\src\\api\\users-api.ts",[],"C:\\Users\\рома\\Documents\\react2\\src\\Redux\\authReduser.tsx",["247","248","249"],"import { ResultCodeEnum, ResultCodeforCaptchaEnum } from '../api/api';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { FormAction, stopSubmit } from \"redux-form\";\r\nimport { AppStateType, BaseThunkType, InferActionsTypes } from './new-store';\r\nimport { Dispatch } from 'redux';\r\nimport { loginApi } from '../api/login-api';\r\nimport { securityApi } from '../api/security-api';\r\n\r\nexport type initialStateType = typeof initialState\r\ntype ActionTypes = InferActionsTypes<typeof actions>\r\ntype ThunkType = BaseThunkType<ActionTypes |FormAction>\r\n// FormAction- не устраивает так как any,но просто чтоб работало 110 1:16\r\nlet initialState = {\r\n  id: null as number | null,\r\n  email: null as string | null,\r\n  login: null as string | null,\r\n  isAuth: false,\r\n  capchaUrl: null as string | null\r\n};\r\n//начальный state\r\nconst authReduser = (state = initialState, action: ActionTypes): initialStateType => {\r\n  switch (action.type) {\r\n    case \"SET_USER_DATA\":\r\n    case \"GET_CAPCHA_URL_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        ...action.data //,isAuth: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n// **************************\r\nexport const actions = {\r\n  setAuthUserData: (email: string | null, login: string | null, id: number | null, isAuth: boolean) => ({ type: \"SET_USER_DATA\", data: { email, login, id, isAuth } } as const),\r\n  getCaptchaSuccess: (capchaUrl: string) => ({ type: \"GET_CAPCHA_URL_SUCCESS\", data: { capchaUrl } } as const),\r\n};\r\n\r\nexport const getAuthDataUser = ():ThunkType => async (dispatch) => {\r\n  // return (dispatch)=>{\r\n  let data = await loginApi.me()\r\n  // .then((response) => {\r\n  if (data.resultCode === ResultCodeEnum.Success) {\r\n    let { email, login, id } = data.data;\r\n    //  let email=meData.data.data.email\r\n    //   let login=meData.data.data.login\r\n    //  let id=meData.data.data.id\r\n\r\n    dispatch(actions.setAuthUserData(email, login, id, true));\r\n  }\r\n  // });\r\n  // }\r\n}\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: any):ThunkType => async (dispatch) => {\r\n  //login с маленькой\r\n  // return (dispatch)=>{\r\n  let LoginData = await loginApi.login(email, password, rememberMe, captcha)\r\n  // .then((response) => {\r\n  if (LoginData.resultCode === ResultCodeEnum.Success) {\r\n    dispatch(getAuthDataUser());\r\n  }\r\n  //79 ещё, если несколько раз неправильно введены пароль или email то:\r\n  else {\r\n    if (LoginData.resultCode === ResultCodeforCaptchaEnum.CaptchaIsRequired) {\r\n      dispatch(captcha2());\r\n    }\r\n    let message = LoginData.messages.length > 0 ? LoginData.messages[0] :\r\n      \"Неправильный логин или пароль\";\r\n    dispatch(stopSubmit(\"login\", { _error: message }));\r\n  }\r\n}\r\nexport const logout = ():ThunkType => async (dispatch) => {\r\n  //logout с маленькой\r\n  // return (dispatch)=>{\r\n  let response = await loginApi.logout()\r\n  // .then((response) => {\r\n  if (response.data.resultCode === ResultCodeEnum.Success) {\r\n    dispatch(actions.setAuthUserData(null, null, null, false));\r\n    //вылогинились и зачищаеи пароль почта id isAuth\r\n  }\r\n  //     });\r\n  // }\r\n}\r\nexport const captcha2 = ():ThunkType => async (dispatch) => {\r\n  let data = await securityApi.getCaptchaUrl()\r\n  // .then((response) => {\r\n  const capchaUrl = data.url\r\n  //  нужно объявить в инициализации выше capchaUrl:null\r\n  dispatch(actions.getCaptchaSuccess(capchaUrl));\r\n  //вызываю экшн кревтор\r\n}\r\nexport default authReduser;\r\n","C:\\Users\\рома\\Documents\\react2\\src\\components\\Dialogs\\Dialogs.jsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Musik.jsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Users\\UsersSearchForm.tsx",[],{"ruleId":"250","replacedBy":"251"},{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","severity":1,"message":"255","line":4,"column":17,"nodeType":"256","messageId":"257","endLine":4,"endColumn":23},{"ruleId":"258","severity":1,"message":"259","line":4,"column":7,"nodeType":"260","endLine":4,"endColumn":99},{"ruleId":"258","severity":1,"message":"259","line":9,"column":7,"nodeType":"260","endLine":9,"endColumn":99},{"ruleId":"258","severity":1,"message":"259","line":14,"column":7,"nodeType":"260","endLine":14,"endColumn":99},{"ruleId":"254","severity":1,"message":"261","line":1,"column":13,"nodeType":"256","messageId":"257","endLine":1,"endColumn":18},{"ruleId":"258","severity":1,"message":"259","line":6,"column":7,"nodeType":"260","endLine":6,"endColumn":30},{"ruleId":"262","severity":1,"message":"263","line":32,"column":40,"nodeType":"264","messageId":"265","endLine":32,"endColumn":42},{"ruleId":"266","severity":1,"message":"267","line":30,"column":9,"nodeType":"260","endLine":30,"endColumn":12},{"ruleId":"266","severity":1,"message":"267","line":40,"column":9,"nodeType":"260","endLine":40,"endColumn":12},{"ruleId":"254","severity":1,"message":"268","line":1,"column":10,"nodeType":"256","messageId":"257","endLine":1,"endColumn":17},{"ruleId":"254","severity":1,"message":"269","line":4,"column":8,"nodeType":"256","messageId":"257","endLine":4,"endColumn":21},{"ruleId":"258","severity":1,"message":"259","line":34,"column":7,"nodeType":"260","endLine":34,"endColumn":122},{"ruleId":"258","severity":1,"message":"259","line":37,"column":9,"nodeType":"260","endLine":37,"endColumn":89},{"ruleId":"262","severity":1,"message":"270","line":58,"column":47,"nodeType":"264","messageId":"265","endLine":58,"endColumn":49},{"ruleId":"254","severity":1,"message":"271","line":14,"column":7,"nodeType":"256","messageId":"257","endLine":14,"endColumn":21},{"ruleId":"254","severity":1,"message":"272","line":1,"column":8,"nodeType":"256","messageId":"257","endLine":1,"endColumn":15},{"ruleId":"273","severity":1,"message":"274","line":14,"column":16,"nodeType":"275","endLine":14,"endColumn":28},{"ruleId":"258","severity":1,"message":"259","line":5,"column":7,"nodeType":"260","endLine":5,"endColumn":75},{"ruleId":"250","replacedBy":"251"},{"ruleId":"252","replacedBy":"253"},{"ruleId":"276","severity":1,"message":"277","line":1,"column":10,"nodeType":"256","messageId":"257","endLine":1,"endColumn":23},{"ruleId":"276","severity":1,"message":"278","line":1,"column":10,"nodeType":"256","messageId":"257","endLine":1,"endColumn":21},{"ruleId":"276","severity":1,"message":"279","line":6,"column":10,"nodeType":"256","messageId":"257","endLine":6,"endColumn":18},{"ruleId":"276","severity":1,"message":"278","line":4,"column":10,"nodeType":"256","messageId":"257","endLine":4,"endColumn":21},{"ruleId":"262","severity":1,"message":"263","line":79,"column":57,"nodeType":"264","messageId":"265","endLine":79,"endColumn":59},{"ruleId":"276","severity":1,"message":"280","line":106,"column":6,"nodeType":"256","messageId":"257","endLine":106,"endColumn":18},{"ruleId":"276","severity":1,"message":"281","line":107,"column":6,"nodeType":"256","messageId":"257","endLine":107,"endColumn":18},{"ruleId":"276","severity":1,"message":"282","line":1,"column":16,"nodeType":"256","messageId":"257","endLine":1,"endColumn":18},{"ruleId":"276","severity":1,"message":"283","line":5,"column":8,"nodeType":"256","messageId":"257","endLine":5,"endColumn":18},{"ruleId":"258","severity":1,"message":"259","line":18,"column":17,"nodeType":"260","endLine":21,"endColumn":19},{"ruleId":"276","severity":1,"message":"272","line":1,"column":8,"nodeType":"256","messageId":"257","endLine":1,"endColumn":15},{"ruleId":"276","severity":1,"message":"284","line":1,"column":17,"nodeType":"256","messageId":"257","endLine":1,"endColumn":30},{"ruleId":"276","severity":1,"message":"282","line":1,"column":17,"nodeType":"256","messageId":"257","endLine":1,"endColumn":19},{"ruleId":"258","severity":1,"message":"259","line":22,"column":19,"nodeType":"260","endLine":22,"endColumn":42},{"ruleId":"276","severity":1,"message":"285","line":4,"column":17,"nodeType":"256","messageId":"257","endLine":4,"endColumn":38},{"ruleId":"276","severity":1,"message":"278","line":2,"column":10,"nodeType":"256","messageId":"257","endLine":2,"endColumn":21},{"ruleId":"276","severity":1,"message":"286","line":4,"column":10,"nodeType":"256","messageId":"257","endLine":4,"endColumn":22},{"ruleId":"276","severity":1,"message":"279","line":5,"column":10,"nodeType":"256","messageId":"257","endLine":5,"endColumn":18},"no-native-reassign",["287"],"no-negated-in-lhs",["288"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'axios' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'NavLink' is defined but never used.","'ProfileStatus' is defined but never used.","Expected '===' and instead saw '=='.","'newPostElement' is assigned a value but never used.","'classes' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'setStatus' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","@typescript-eslint/no-unused-vars","'BaseThunkType' is defined but never used.","'ThunkAction' is defined but never used.","'Dispatch' is defined but never used.","'DispatchType' is defined but never used.","'GetStateType' is defined but never used.","'FC' is defined but never used.","'Pagination' is defined but never used.","'AxiosResponse' is defined but never used.","'WrappedFieldMetaProps' is defined but never used.","'AppStateType' is defined but never used.","no-global-assign","no-unsafe-negation"]