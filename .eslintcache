[{"C:\\Users\\рома\\Documents\\react2\\src\\index.js":"1","C:\\Users\\рома\\Documents\\react2\\src\\reportWebVitals.js":"2","C:\\Users\\рома\\Documents\\react2\\src\\App.js":"3","C:\\Users\\рома\\Documents\\react2\\src\\Redux\\sidebarReduser .js":"4","C:\\Users\\рома\\Documents\\react2\\src\\components\\Header\\HeaderContainer.jsx":"5","C:\\Users\\рома\\Documents\\react2\\src\\components\\Login\\Login.jsx":"6","C:\\Users\\рома\\Documents\\react2\\src\\components\\Nav\\NavContainer.jsx":"7","C:\\Users\\рома\\Documents\\react2\\src\\components\\common\\Preloader\\Preloader.jsx":"8","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\ProfileContainer.jsx":"9","C:\\Users\\рома\\Documents\\react2\\src\\components\\Dialogs\\DialogsContainer.jsx":"10","C:\\Users\\рома\\Documents\\react2\\src\\components\\common\\FormControls\\FormControls.js":"11","C:\\Users\\рома\\Documents\\react2\\src\\hoc\\withAuthRedirect.js":"12","C:\\Users\\рома\\Documents\\react2\\src\\api\\api.js":"13","C:\\Users\\рома\\Documents\\react2\\src\\utils\\validator\\validators.js":"14","C:\\Users\\рома\\Documents\\react2\\src\\components\\Header\\Header.jsx":"15","C:\\Users\\рома\\Documents\\react2\\src\\components\\Nav\\Nav.jsx":"16","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\Profile.jsx":"17","C:\\Users\\рома\\Documents\\react2\\src\\components\\Dialogs\\Dialogs.jsx":"18","C:\\Users\\рома\\Documents\\react2\\src\\components\\Nav\\Navitem.jsx":"19","C:\\Users\\рома\\Documents\\react2\\src\\components\\Dialogs\\Dialogitem\\Dialogitem.jsx":"20","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\Profileinfo\\Profileinfo.jsx":"21","C:\\Users\\рома\\Documents\\react2\\src\\components\\Dialogs\\Messages\\Messages.jsx":"22","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\MyPosts\\MyPostsContainer.jsx":"23","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\MyPosts\\MyPosts.jsx":"24","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\Profileinfo\\ProfileStatusWithHooks.jsx":"25","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\Profileinfo\\ProfileDataForm.jsx":"26","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx":"27","C:\\Users\\рома\\Documents\\react2\\src\\Redux\\app-Reduser.ts":"28","C:\\Users\\рома\\Documents\\react2\\src\\Redux\\authReduser.ts":"29","C:\\Users\\рома\\Documents\\react2\\src\\Redux\\dialogReduser.ts":"30","C:\\Users\\рома\\Documents\\react2\\src\\Redux\\profileReduser.ts":"31","C:\\Users\\рома\\Documents\\react2\\src\\Redux\\usersReduser.ts":"32","C:\\Users\\рома\\Documents\\react2\\src\\Redux\\new-store.ts":"33","C:\\Users\\рома\\Documents\\react2\\src\\components\\Users\\UsersContainer.tsx":"34","C:\\Users\\рома\\Documents\\react2\\src\\Redux\\users-selectors.ts":"35","C:\\Users\\рома\\Documents\\react2\\src\\components\\Users\\UsersApiContainer.tsx":"36","C:\\Users\\рома\\Documents\\react2\\src\\components\\Users\\Users.tsx":"37","C:\\Users\\рома\\Documents\\react2\\src\\components\\Users\\User.tsx":"38","C:\\Users\\рома\\Documents\\react2\\src\\components\\common\\paginator\\Pagination.tsx":"39","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\Profileinfo\\ProfileStatus.tsx":"40"},{"size":1229,"mtime":1649013393561,"results":"41","hashOfConfig":"42"},{"size":375,"mtime":1639674209140,"results":"43","hashOfConfig":"42"},{"size":3374,"mtime":1650742958635,"results":"44","hashOfConfig":"42"},{"size":566,"mtime":1639674209118,"results":"45","hashOfConfig":"42"},{"size":584,"mtime":1642880667492,"results":"46","hashOfConfig":"42"},{"size":2472,"mtime":1648582319534,"results":"47","hashOfConfig":"42"},{"size":591,"mtime":1639674209124,"results":"48","hashOfConfig":"42"},{"size":232,"mtime":1639674209140,"results":"49","hashOfConfig":"42"},{"size":2676,"mtime":1648922672772,"results":"50","hashOfConfig":"42"},{"size":723,"mtime":1640285483748,"results":"51","hashOfConfig":"42"},{"size":1373,"mtime":1648059668633,"results":"52","hashOfConfig":"42"},{"size":871,"mtime":1640716997189,"results":"53","hashOfConfig":"42"},{"size":2384,"mtime":1648581820250,"results":"54","hashOfConfig":"42"},{"size":329,"mtime":1640546348272,"results":"55","hashOfConfig":"42"},{"size":476,"mtime":1642621133558,"results":"56","hashOfConfig":"42"},{"size":1592,"mtime":1639937527120,"results":"57","hashOfConfig":"42"},{"size":582,"mtime":1648148343051,"results":"58","hashOfConfig":"42"},{"size":1824,"mtime":1642619614813,"results":"59","hashOfConfig":"42"},{"size":439,"mtime":1639674209124,"results":"60","hashOfConfig":"42"},{"size":383,"mtime":1639674209124,"results":"61","hashOfConfig":"42"},{"size":3542,"mtime":1648410022216,"results":"62","hashOfConfig":"42"},{"size":180,"mtime":1639674209124,"results":"63","hashOfConfig":"42"},{"size":1728,"mtime":1640372911575,"results":"64","hashOfConfig":"42"},{"size":2131,"mtime":1648323797142,"results":"65","hashOfConfig":"42"},{"size":1920,"mtime":1647712093117,"results":"66","hashOfConfig":"42"},{"size":1477,"mtime":1648322914448,"results":"67","hashOfConfig":"42"},{"size":428,"mtime":1639674209140,"results":"68","hashOfConfig":"42"},{"size":2165,"mtime":1649786857115,"results":"69","hashOfConfig":"42"},{"size":3338,"mtime":1650131513475,"results":"70","hashOfConfig":"42"},{"size":1993,"mtime":1650130557937,"results":"71","hashOfConfig":"42"},{"size":4865,"mtime":1650050177938,"results":"72","hashOfConfig":"42"},{"size":6193,"mtime":1650744301093,"results":"73","hashOfConfig":"42"},{"size":974,"mtime":1650309237756,"results":"74","hashOfConfig":"42"},{"size":1950,"mtime":1650716159832,"results":"75","hashOfConfig":"42"},{"size":1053,"mtime":1650309894683,"results":"76","hashOfConfig":"42"},{"size":2577,"mtime":1650743161296,"results":"77","hashOfConfig":"42"},{"size":1024,"mtime":1650740930493,"results":"78","hashOfConfig":"42"},{"size":2032,"mtime":1650742497707,"results":"79","hashOfConfig":"42"},{"size":2766,"mtime":1650481396278,"results":"80","hashOfConfig":"42"},{"size":2211,"mtime":1650480618768,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"18784x4",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"84"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"84"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"84"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"84"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"84"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"84"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"150"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\рома\\Documents\\react2\\src\\index.js",[],["176","177"],"C:\\Users\\рома\\Documents\\react2\\src\\reportWebVitals.js",[],"C:\\Users\\рома\\Documents\\react2\\src\\App.js",["178"],"C:\\Users\\рома\\Documents\\react2\\src\\Redux\\sidebarReduser .js",["179","180","181"],"let initialState = [\r\n  {\r\n    img2: (\r\n      <img src=\"https://i0.wp.com/andrey-eltsov.ru/wp-content/uploads/2018/02/SmailikSbor3.jpg\" />\r\n    ),\r\n  },\r\n  {\r\n    img2: (\r\n      <img src=\"https://i0.wp.com/andrey-eltsov.ru/wp-content/uploads/2018/02/SmailikSbor3.jpg\" />\r\n    ),\r\n  },\r\n  {\r\n    img2: (\r\n      <img src=\"https://i0.wp.com/andrey-eltsov.ru/wp-content/uploads/2018/02/SmailikSbor3.jpg\" />\r\n    ),\r\n  },\r\n];\r\nconst sidebarReduser = (state = initialState, action) => {\r\n  //let stateCopy={...state};\r\n  return state;\r\n};\r\nexport default sidebarReduser;\r\n","C:\\Users\\рома\\Documents\\react2\\src\\components\\Header\\HeaderContainer.jsx",["182"],"import * as axios from \"axios\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../Redux/authReduser\";\r\nimport Header from \"./Header\";\r\nclass HeaderContainer extends React.Component {\r\n  /* componentDidMount() {\r\n    this.props.getAuthDataUser();\r\n  } //END componentDidMount */\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n} //END HeaderContainer\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login\r\n});\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);\r\n","C:\\Users\\рома\\Documents\\react2\\src\\components\\Login\\Login.jsx",["183"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { required } from \"../../utils/validator/validators\";\r\nimport { input } from \"../common/FormControls/FormControls\";\r\nimport { login } from \"../../Redux/authReduser\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport styles from \"../common/FormControls/FormControls.module.css\";\r\nimport {createField} from \"../common/FormControls/FormControls\";\r\nconst LoginForm = ({handleSubmit,error,capchaUrl}) => {\r\n  // убрал слово props\r\n  return <form onSubmit={handleSubmit}>\r\n    {createField(\"Email\",\"email\",[required],input,)}\r\n    {createField(\"Password\",\"password\",[required],input,{type:\"password\"})}\r\n    {createField(null,\"rememberMe\",[],input,{type:\"checkbox\"},\"remember me\")}\r\n    {/* ниже капча */}\r\n    {capchaUrl&&<img src={capchaUrl}/>}\r\n    {capchaUrl&&createField(\"Введите капчу\",\"captcha\",[required],input,{})}\r\n\r\n    {error&&<div className={styles.formSummaryError}>\r\n     {error}\r\n    </div>}\r\n    <div>\r\n      <button>Login</button>\r\n    </div>\r\n  </form>\r\n  //внутри handleSubmit находится formData\r\n};\r\nconst LoginReduxForm = reduxForm({ form: \"login\" })(LoginForm);\r\n/*обворачиваем (хоком reduxForm) компоненту LoginForm\r\n и получаем контейнерную  компоненту LoginReduxForm */\r\nconst Login2 = (props) => {\r\n  const aonSubmit = (formData) => {\r\n    //75 урок 32:00 formData значение из reduxForm->handleSubmit\r\n    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    //login с маленькой\r\n    //78 18:40 логинизация\r\n    //console.log(formData);\r\n    //без console.log не работает\r\n    /* mapStateToProps = (state) => {\r\n      return { form: state.form };\r\n    };\r\n    let mapDispatchToProps = (dispatch) => {\r\n      return {\r\n        onSubmit: () => {\r\n          dispatch(onSubmitAC());\r\n        },\r\n      };\r\n    };*/\r\n  }\r\n  if (props.isAuth) {\r\n    return <Redirect to={'/profile'}/>\r\n  } \r\n  return <div>\r\n    <h1>LOGIN</h1>\r\n    <LoginReduxForm onSubmit={aonSubmit} capchaUrl={props.capchaUrl}/>\r\n  </div>\r\n};\r\nconst mapStateToProps=(state)=>({\r\n  isAuth:state.auth.isAuth,\r\n  capchaUrl:state.auth.capchaUrl\r\n})\r\nexport default connect(mapStateToProps, {login})(Login2);\r\n//login приходит из authReduser login с маленькой\r\n","C:\\Users\\рома\\Documents\\react2\\src\\components\\Nav\\NavContainer.jsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\common\\Preloader\\Preloader.jsx",["184"],"import React from \"react\";\r\nimport preloader from \"../../../assets/images/Spinner-1s-200px.svg\";\r\nlet Preloader = (props) => {\r\n  return (\r\n    <div>\r\n      <img src={preloader} />\r\n    </div> \r\n  );\r\n};\r\nexport default Preloader;\r\n","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\ProfileContainer.jsx",["185"],"import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { profilesData, getStatus, updateUserStatus,savePhoto,saveProfile } from \"../../Redux/profileReduser\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  // чтобы код не писать дважды ниже создам refreshProfile\r\n  refreshProfile(){\r\n    let userIdd = this.props.match.params.userId\r\n    /*когда вызывается withRouter из url метод match возвращает params-userId\r\n    и получаю id юзера*/\r\n    if (!userIdd) {\r\n      userIdd = this.props.authorizedUserId;\r\n    }\r\n   /*  if (!userIdd) {\r\n      this.props.history.push(\"/login\");\r\n      когда жму кнопку вылогиниться нужно уйти из профиля,\r\n      но вроде и так срабатывает withAuthRedirect,\r\n       а это \"програмный\" редирект\r\n    } */\r\n    this.props.profilesData(userIdd);\r\n    this.props.getStatus(userIdd);\r\n    //вызываю thunk из редюсера\r\n  }\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  } //end componentDidMount\r\n  componentDidUpdate(prevProps,prevState,snapshot){\r\n    if (this.props.match.params.userId !=prevProps.match.params.userId){\r\n      this.refreshProfile();\r\n    }\r\n    // match из withRouter\r\n    // чтобы с чужого профиля переходить на свой при нажатии на profile\r\n  }\r\n  render() {\r\n    return <Profile {...this.props}\r\n              isOwner={!this.props.match.params.userId}\r\n              // если нет userId\r\n              status={this.props.status}\r\n              updateUserStatus={this.props.updateUserStatus}\r\n              profile={this.props.profile}/*profile={this.props.profile} -был заккоментирован*/ \r\n              savePhoto={this.props.savePhoto}/>\r\n  }\r\n} //end ProfileContainer\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.id,\r\n  isAuth: state.auth.isAuth,\r\n});\r\nexport default compose(\r\n  connect(mapStateToProps, { profilesData, getStatus, updateUserStatus,savePhoto,saveProfile}),\r\n  withAuthRedirect,\r\n  //withRouter получаю из url нужную часть\r\n  withRouter\r\n)(ProfileContainer);\r\n//возьми ProfileContainer и закинь его в withRouter--> withAuthRedirect,а \r\n// потом результат в connect(mapStateToProps...\r\n","C:\\Users\\рома\\Documents\\react2\\src\\components\\Dialogs\\DialogsContainer.jsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\common\\FormControls\\FormControls.js",[],"C:\\Users\\рома\\Documents\\react2\\src\\hoc\\withAuthRedirect.js",[],"C:\\Users\\рома\\Documents\\react2\\src\\api\\api.js",[],"C:\\Users\\рома\\Documents\\react2\\src\\utils\\validator\\validators.js",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Header\\Header.jsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Nav\\Nav.jsx",["186","187"],"import { NavLink } from \"react-router-dom\";\r\nimport classes from \"./Nav.module.css\";\r\nimport Navitem from \"./Navitem\";\r\nconst Nav = (props) => {\r\n  let navElements = props.friends.map((d) => (\r\n    <Navitem name={d.nname} id={d.id} avatar={d.avatar} />\r\n  ));\r\n    let nifElements = props.sideavata.map((m) => (\r\n      <Navitem foto={m.img2} />\r\n    ));\r\n  return (\r\n    <nav className={classes.nav}>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/profile\" activeClassName={classes.activeLink}>\r\n          Profile\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/dialogs\" activeClassName={classes.active}>\r\n          Dialogs\r\n        </NavLink>\r\n        {/* activeClassName стиль активной ссылки */}\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/users\" activeClassName={classes.active}>\r\n          Users\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <a>News</a>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/musik\">Music</NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/login\">Login</NavLink>\r\n      </div>\r\n      <div className={`${classes.item} ${classes.aert}`}>\r\n        {/* 2 стиля для одного элемента перестало работать*/}\r\n        <a>Settings</a>\r\n      </div>\r\n      <div> FRIENDS:</div>\r\n      <div className={classes.navitem}>\r\n        {navElements}\r\n         {nifElements} \r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\Profile.jsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Dialogs\\Dialogs.jsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Nav\\Navitem.jsx",["188"],"import { NavLink } from \"react-router-dom\";\r\nimport classes from \"./Nav.module.css\";\r\nconst Navitem = (props) => {\r\n \r\n  return (\r\n    <div className={classes.friends}>\r\n     <div className={classes.nu}>{props.name}{props.foto}</div>\r\n      {/* <div className={classes.mnu}>{props.name}{props.foto}</div>\r\n     <div className={classes.pnu}>{props.name}{props.foto}</div>\r\n      */}\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navitem;\r\n","C:\\Users\\рома\\Documents\\react2\\src\\components\\Dialogs\\Dialogitem\\Dialogitem.jsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\Profileinfo\\Profileinfo.jsx",["189","190","191","192"],"\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport classes from \"./Profileinfo.module.css\"\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"./../../../assets/images/users.png\";\r\nimport { useState } from \"react\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nconst Profileinfo = (props) => {\r\n  let [editMode,setEditMode]= useState(false)\r\n//    деструктуризация массива\r\n//    useState сидит в библиотеке react\r\n//useState возвращает первым номером значение и 2м ф. \r\n// которая меняет это значение(1-editMode,2-setEditMode)\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  }\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      // если фото имеет длинну-не пустая\r\n      props.savePhoto(e.target.files[0])\r\n      // то возьми это фото\r\n      console.log(props.savePhoto)\r\n    }\r\n  }\r\n  const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(()=>{\r\n         setEditMode(false);\r\n        });\r\n        // async await не сработал\r\n    }\r\n  return (\r\n    <div>\r\n      <img src=\"https://i.pinimg.com/originals/f5/39/b6/f539b6967cb0f250d4e05cc133a8c87d.jpg\" width=\"800\" height=\"400\" />\r\n      {/* пляж */}\r\n      <div className={classes.descr}>\r\n        <img src={props.profile.photos.large || userPhoto} className={classes.avatar} />\r\n        {props.isOwner && <input type=\"file\" onChange={onMainPhotoSelected} />}\r\n        {/* если есть isOwner покажи кнопку с выбором файла */}\r\n       {editMode?\r\n       <ProfileDataForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit}/>:\r\n      //  initialValues метод redux-form. При перезагрузке страницы ,\r\n      //  чтобы сохранялись в input и textarea введенные значения\r\n       <ProfileData goToEditMode={()=>{setEditMode(true)}} isOwner={props.isOwner} profile={props.profile} />}\r\n        {/* тринарное выражение на верху */}\r\n        <ProfileStatusWithHooks status={props.status}\r\n          updateUserStatus={props.updateUserStatus} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst ProfileData = ({ profile,isOwner,goToEditMode }) => {\r\n  return <div>\r\n    {isOwner&&<div><button onClick={goToEditMode}>edit</button></div>}\r\n    <div>avat+descr</div>\r\n    <div>Имя:{profile.fullName}</div>\r\n    <div>обо мне: {profile.aboutMe}</div>\r\n    <div>ищешь работу?{profile.lookingForAJob == true ? 'Да' : 'Нет'}</div>\r\n    <div>\r\n      какую хочешь работу? {profile.lookingForAJobDescription}\r\n    </div>\r\n    <div>\r\n      контакты:{Object.keys(profile.contacts).map(key => {\r\n        // Object.keys(obj) – возвращает массив ключей.\r\n        return <Contacts key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n        // contactValue  пример: let abv={\r\n        //  github: qwerty\r\n        //     vk: trytry\r\n        //     facebook: popop}\r\n        //     abv[facebook] вернет popop\r\n        // key={key} зачем не понял\r\n      })}\r\n    </div>\r\n  </div>\r\n}\r\nconst Contacts = ({ contactTitle, contactValue }) => {\r\n  return <div className={classes.contact}>\r\n    {contactTitle}:{contactValue}\r\n  </div>\r\n}\r\n\r\nexport default Profileinfo;\r\n","C:\\Users\\рома\\Documents\\react2\\src\\components\\Dialogs\\Messages\\Messages.jsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\MyPosts\\MyPostsContainer.jsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\MyPosts\\MyPosts.jsx",["193"],"import classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validator/validators\";\r\nimport { input } from \"../../common/FormControls/FormControls\";\r\n// console.log(MyPosts);\r\nconst maxLength10=maxLengthCreator(10);\r\nconst MyPosts =React.memo(props => {\r\n  // React.memo если пропсы не поменялись.то не рендерь\r\n  let postElement = props.post.map((p) => (\r\n    <Post key={p.id} message={p.message} count={p.count} />\r\n  ));\r\n  let newPostElement = React.createRef(); /* 31 реакт создай ссылку*/\r\n  let addhhPost = (values) => {\r\n    // let newtext = newPostElement.current.value; -перенес в state\r\n    props.addPost(values.newPostText);\r\n    //props.dispatch(addhhPostActionCreator());\r\n    /*31,32 вызываю функцию addPost\r\n      в state.js */\r\n    /* props.updatenewPost('');обнуляю значение в textarea \r\n    -перенес в state.js */\r\n  };\r\n  // let onPostChange = () => {\r\n  //   let newtext5 = newPostElement.current.value;\r\n  //   props.updateNewPostText(newtext5);\r\n  //   //let action=(onPostChangeActionCreator(newtext5))\r\n  //   //создал action для примера чтобы видеть процесс\r\n  //   //props.dispatch(action);\r\n  //   //при изменении в textarea передаю данные в state.js\r\n  // };\r\n  return (\r\n    <div className={classes.post}>\r\n      <h2>My Post</h2>\r\n      <div>\r\n        <PostReduxForm onSubmit={addhhPost}/>\r\n      </div>\r\n      <div className={classes.newpost}>{postElement}</div>\r\n    </div>\r\n  );\r\n});\r\nconst myPostForm= (props) => {\r\n  return(\r\n  <form onSubmit={props.handleSubmit}>\r\n    <div>\r\n      <Field component={input} name=\"newPostText\" placeholder=\"введите\" \r\n      validate={[required,maxLength10]} />\r\n    </div>\r\n    <div>\r\n      <button >Add post</button>\r\n    </div>\r\n  </form>\r\n  )\r\n};\r\nconst PostReduxForm = reduxForm({ form: \"myPostText\" })(myPostForm);\r\nexport default MyPosts;\r\n","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\Profileinfo\\ProfileStatusWithHooks.jsx",["194","195"],"import classes from \"./Profileinfo.module.css\"\r\nimport React, { useState, useEffect } from \"react\";\r\n// import { useEffect } from \"react\";\r\n\r\nconst ProfileStatusWithHooks= (props) =>{\r\n   let [editMode,setEditMode]= useState(false)\r\n//    деструктуризация массива\r\n//    useState сидит в библиотеке react\r\n//useState возвращает первым номером значение и 2м ф. \r\n// которая меняет это значение(1-editMode,2-setEditMode)\r\nlet [status,setStatus]= useState(props.status)\r\n// раздробил локальный стейт на 2 части\r\nuseEffect( ()=>{\r\n    setStatus=(props.status);\r\n},[props.status])\r\n// зависишь от [props.status] если он поменялся то отрисуй\r\n// useEffect срабатывает после отрисовки компоненты\r\nconst activateEditMode = () => {\r\n  setEditMode(true)\r\n}\r\nconst deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateUserStatus(status);\r\n}\r\nconst onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n    // закидываю вводимые символы в props.status\r\n}\r\n            return (\r\n            <div>{!editMode&&//если editMode в стейте=false ,то...\r\n                <div>\r\n                   <b>status:</b> <span onDoubleClick={activateEditMode}>{props.status ||\"no status\"}</span>\r\n                </div>\r\n            }\r\n                {editMode &&\r\n                    <div>\r\n                        <input onChange={onStatusChange} \r\n                        // при изменениии в input\r\n                        value={status}\r\n                         autoFocus={true}\r\n                          onBlur={deactivateEditMode} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    \r\n};\r\nexport default ProfileStatusWithHooks;\r\n","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\Profileinfo\\ProfileDataForm.jsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx",["196"],"import classes from \"./Post.module.css\";\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={classes.item}>\r\n      <img src=\"http://pngimg.com/uploads/spongebob/spongebob_PNG8.png\" />\r\n      {/* <img src=\"https://kurer-sreda.ru/wp-contenpt/uloads/2020/06/1-48-800x663.png\" /> */}\r\n\r\n      {props.message}\r\n      <div>\r\n        <span>Like {props.count}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","C:\\Users\\рома\\Documents\\react2\\src\\Redux\\app-Reduser.ts",[],["197","198"],"C:\\Users\\рома\\Documents\\react2\\src\\Redux\\authReduser.ts",[],"C:\\Users\\рома\\Documents\\react2\\src\\Redux\\dialogReduser.ts",[],"C:\\Users\\рома\\Documents\\react2\\src\\Redux\\profileReduser.ts",["199","200"],"import { profileApi } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\nimport { photosType, postType,profileType,contactType } from \"../types/types\";\r\nconst ADD_POST = \"ADD-POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst GET_STATUS = \"GET_STATUS\";\r\nconst SAVE_PHOTO_SUCCESS = \"SAVE_PHOTO_SUCCESS\";\r\n\r\nexport type initialStateType = typeof initialState\r\nlet initialState = {\r\n  post: [\r\n    { id: 1, message: \"Как дела\", count: 2 },\r\n    { id: 2, message: \"нормально\", count: 5 },\r\n  ]as Array<postType>,\r\n  //newPostText: \"\",\r\n  profile:null as profileType|null,\r\n  status: \"\",\r\n  newPostText: \"\"\r\n};\r\n//начальный state\r\nconst profileReduser = (state = initialState, action:any):initialStateType => {\r\n  switch (action.type) {\r\n    case ADD_POST:\r\n      // скобка {} чтобы писать одну и ту же переменную\r\n      // let stateCopy тут и ниже\r\n      let newPost = {\r\n        id: 3,\r\n       message: action.newPostText,\r\n        count: 0,\r\n      };\r\n      return {\r\n        ...state,\r\n        post: [...state.post, newPost],\r\n        //it is array []\r\n       // newPostText: \"\", // стираю текст в textarea\r\n        //после return функция не выполняется это вместо break\r\n      };\r\n    case SET_USER_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.profile,\r\n      };\r\n    case GET_STATUS:\r\n      return {\r\n        ...state,\r\n        status: action.status,\r\n      };\r\n    case SAVE_PHOTO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        profile: { ...state.profile,\r\n        photos: action.photos}as profileType// после испаравить\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\ntype addhhPostActionCreatorType={\r\n  type:typeof ADD_POST,\r\n   newPostText:string\r\n}\r\nexport const addhhPostActionCreator = (newPostText:string):addhhPostActionCreatorType => ({ type: ADD_POST, newPostText });\r\ntype setUserProfileAcType={\r\n  type:typeof SET_USER_PROFILE,\r\n  profile:profileType\r\n}\r\nexport const setUserProfile = (profile:profileType):setUserProfileAcType => ({\r\n  type: SET_USER_PROFILE,\r\n  profile,\r\n});\r\ntype getuStatusAcType={\r\n  type:typeof GET_STATUS,\r\n  status:string\r\n}\r\nexport const getuStatus = (status:string):getuStatusAcType => ({\r\n  type: GET_STATUS,\r\n  status,\r\n});\r\ntype savePhotoSuccessAcType={\r\n  type:typeof SAVE_PHOTO_SUCCESS,\r\n  photos:photosType\r\n}\r\nexport const savePhotoSuccess = (photos:photosType) => ({\r\n  type: SAVE_PHOTO_SUCCESS,\r\n  photos,\r\n});\r\n//thunk\r\nexport const profilesData = (userIdd:number) => async(dispatch:any) =>{\r\n  // return (dispatch) => {\r\n   let response=await profileApi.getProfileApi(userIdd)\r\n    // .then((response) => {\r\n      //запрос в api.js\r\n      dispatch(setUserProfile(response.data));\r\n  //   });\r\n  // }\r\n}\r\nexport const getStatus = (userIdd:number) =>async(dispatch:any) => {\r\n  // return (dispatch) => {\r\n    let response=await profileApi.getUserStatus(userIdd)\r\n    // .then((response) => {\r\n      //запрос в api.js получить статус\r\n      dispatch(getuStatus(response.data));\r\n  //   });\r\n  // }\r\n}\r\nexport const updateUserStatus = (status:string) =>async(dispatch:any) => {\r\n  // return (dispatch) => {\r\n    let response=await profileApi.updateStatus(status)\r\n    // .then((response) => {\r\n      //запрос в api.js установить статус\r\n      if (response.data.resultCode === 0) {\r\n        dispatch(getuStatus(status));\r\n      }\r\n      //вызывается тот же экшн креатор ,что и выше  и обновляется status\r\n  //   });\r\n  // }\r\n}\r\nexport const savePhoto = (file:any) =>async(dispatch:any) => {\r\n  // return (dispatch) => {\r\n    let response=await profileApi.savePhoto(file)\r\n      //запрос в api.js \r\n      if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n      }\r\n}\r\nexport const saveProfile = (profile:profileType) =>async(dispatch:any,getState:any) => {\r\n  const useruidi= getState().auth.id\r\n  // getState достал значение из глобального стейта \r\n    let response=await profileApi.saveProfile(profile)\r\n      //запрос в api.js .Сохранил изменения профиля на сервере \r\n      if (response.data.resultCode === 0) {\r\n        dispatch(profilesData(useruidi));\r\n            //  обновил профиль\r\n      }\r\n      else{\r\n        dispatch(stopSubmit(\"edit-profile\", {\"contacts\":{ \"facebook\": response.data.messages[0]} }));\r\n        // contacts- объект facebook-ключ в объекте.\r\n        //  Надо распарсить строку и сделать для всех input\r\n        return Promise.reject(response.data.messages[0])\r\n      }\r\n}\r\nexport default profileReduser;\r\n","C:\\Users\\рома\\Documents\\react2\\src\\Redux\\usersReduser.ts",["201"],"C:\\Users\\рома\\Documents\\react2\\src\\Redux\\new-store.ts",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Users\\UsersContainer.tsx",["202","203"],"C:\\Users\\рома\\Documents\\react2\\src\\Redux\\users-selectors.ts",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Users\\UsersApiContainer.tsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Users\\Users.tsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Users\\User.tsx",["204","205","206"],"C:\\Users\\рома\\Documents\\react2\\src\\components\\common\\paginator\\Pagination.tsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\Profileinfo\\ProfileStatus.tsx",["207"],{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","severity":1,"message":"213","line":4,"column":17,"nodeType":"214","messageId":"215","endLine":4,"endColumn":23},{"ruleId":"216","severity":1,"message":"217","line":4,"column":7,"nodeType":"218","endLine":4,"endColumn":99},{"ruleId":"216","severity":1,"message":"217","line":9,"column":7,"nodeType":"218","endLine":9,"endColumn":99},{"ruleId":"216","severity":1,"message":"217","line":14,"column":7,"nodeType":"218","endLine":14,"endColumn":99},{"ruleId":"212","severity":1,"message":"219","line":1,"column":13,"nodeType":"214","messageId":"215","endLine":1,"endColumn":18},{"ruleId":"216","severity":1,"message":"217","line":17,"column":17,"nodeType":"218","endLine":17,"endColumn":39},{"ruleId":"216","severity":1,"message":"217","line":6,"column":7,"nodeType":"218","endLine":6,"endColumn":30},{"ruleId":"220","severity":1,"message":"221","line":32,"column":40,"nodeType":"222","messageId":"223","endLine":32,"endColumn":42},{"ruleId":"224","severity":1,"message":"225","line":30,"column":9,"nodeType":"218","endLine":30,"endColumn":12},{"ruleId":"224","severity":1,"message":"225","line":40,"column":9,"nodeType":"218","endLine":40,"endColumn":12},{"ruleId":"212","severity":1,"message":"226","line":1,"column":10,"nodeType":"214","messageId":"215","endLine":1,"endColumn":17},{"ruleId":"212","severity":1,"message":"227","line":4,"column":8,"nodeType":"214","messageId":"215","endLine":4,"endColumn":21},{"ruleId":"216","severity":1,"message":"217","line":34,"column":7,"nodeType":"218","endLine":34,"endColumn":122},{"ruleId":"216","severity":1,"message":"217","line":37,"column":9,"nodeType":"218","endLine":37,"endColumn":89},{"ruleId":"220","severity":1,"message":"228","line":58,"column":47,"nodeType":"222","messageId":"223","endLine":58,"endColumn":49},{"ruleId":"212","severity":1,"message":"229","line":14,"column":7,"nodeType":"214","messageId":"215","endLine":14,"endColumn":21},{"ruleId":"212","severity":1,"message":"230","line":1,"column":8,"nodeType":"214","messageId":"215","endLine":1,"endColumn":15},{"ruleId":"231","severity":1,"message":"232","line":14,"column":16,"nodeType":"233","endLine":14,"endColumn":28},{"ruleId":"216","severity":1,"message":"217","line":5,"column":7,"nodeType":"218","endLine":5,"endColumn":75},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"234","severity":1,"message":"235","line":3,"column":43,"nodeType":"214","messageId":"215","endLine":3,"endColumn":54},{"ruleId":"234","severity":1,"message":"236","line":79,"column":6,"nodeType":"214","messageId":"215","endLine":79,"endColumn":28},{"ruleId":"220","severity":1,"message":"221","line":78,"column":57,"nodeType":"222","messageId":"223","endLine":78,"endColumn":59},{"ruleId":"234","severity":1,"message":"237","line":6,"column":3,"nodeType":"214","messageId":"215","endLine":6,"endColumn":17},{"ruleId":"234","severity":1,"message":"238","line":7,"column":3,"nodeType":"214","messageId":"215","endLine":7,"endColumn":25},{"ruleId":"234","severity":1,"message":"239","line":1,"column":16,"nodeType":"214","messageId":"215","endLine":1,"endColumn":18},{"ruleId":"234","severity":1,"message":"240","line":5,"column":8,"nodeType":"214","messageId":"215","endLine":5,"endColumn":18},{"ruleId":"216","severity":1,"message":"217","line":18,"column":17,"nodeType":"218","endLine":21,"endColumn":19},{"ruleId":"234","severity":1,"message":"230","line":1,"column":8,"nodeType":"214","messageId":"215","endLine":1,"endColumn":15},"no-native-reassign",["241"],"no-negated-in-lhs",["242"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'axios' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'NavLink' is defined but never used.","'ProfileStatus' is defined but never used.","Expected '===' and instead saw '=='.","'newPostElement' is assigned a value but never used.","'classes' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'setStatus' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","@typescript-eslint/no-unused-vars","'contactType' is defined but never used.","'savePhotoSuccessAcType' is defined but never used.","'setcurrentpage' is defined but never used.","'toggleFollowInProgress' is defined but never used.","'FC' is defined but never used.","'Pagination' is defined but never used.","no-global-assign","no-unsafe-negation"]