[{"C:\\Users\\рома\\Documents\\react2\\src\\index.js":"1","C:\\Users\\рома\\Documents\\react2\\src\\reportWebVitals.js":"2","C:\\Users\\рома\\Documents\\react2\\src\\App.js":"3","C:\\Users\\рома\\Documents\\react2\\src\\Redux\\new-store.js":"4","C:\\Users\\рома\\Documents\\react2\\src\\Redux\\usersReduser.js":"5","C:\\Users\\рома\\Documents\\react2\\src\\Redux\\sidebarReduser .js":"6","C:\\Users\\рома\\Documents\\react2\\src\\components\\Header\\HeaderContainer.jsx":"7","C:\\Users\\рома\\Documents\\react2\\src\\components\\Login\\Login.jsx":"8","C:\\Users\\рома\\Documents\\react2\\src\\components\\Nav\\NavContainer.jsx":"9","C:\\Users\\рома\\Documents\\react2\\src\\components\\common\\Preloader\\Preloader.jsx":"10","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\ProfileContainer.jsx":"11","C:\\Users\\рома\\Documents\\react2\\src\\components\\Users\\UsersContainer.jsx":"12","C:\\Users\\рома\\Documents\\react2\\src\\components\\Dialogs\\DialogsContainer.jsx":"13","C:\\Users\\рома\\Documents\\react2\\src\\Redux\\users-selectors.js":"14","C:\\Users\\рома\\Documents\\react2\\src\\components\\common\\FormControls\\FormControls.js":"15","C:\\Users\\рома\\Documents\\react2\\src\\hoc\\withAuthRedirect.js":"16","C:\\Users\\рома\\Documents\\react2\\src\\api\\api.js":"17","C:\\Users\\рома\\Documents\\react2\\src\\utils\\validator\\validators.js":"18","C:\\Users\\рома\\Documents\\react2\\src\\components\\Header\\Header.jsx":"19","C:\\Users\\рома\\Documents\\react2\\src\\components\\Nav\\Nav.jsx":"20","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\Profile.jsx":"21","C:\\Users\\рома\\Documents\\react2\\src\\components\\Dialogs\\Dialogs.jsx":"22","C:\\Users\\рома\\Documents\\react2\\src\\components\\Users\\UsersApiContainer.jsx":"23","C:\\Users\\рома\\Documents\\react2\\src\\components\\Nav\\Navitem.jsx":"24","C:\\Users\\рома\\Documents\\react2\\src\\components\\Users\\Users.jsx":"25","C:\\Users\\рома\\Documents\\react2\\src\\components\\Dialogs\\Dialogitem\\Dialogitem.jsx":"26","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\Profileinfo\\Profileinfo.jsx":"27","C:\\Users\\рома\\Documents\\react2\\src\\components\\Dialogs\\Messages\\Messages.jsx":"28","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\MyPosts\\MyPostsContainer.jsx":"29","C:\\Users\\рома\\Documents\\react2\\src\\components\\Users\\User.jsx":"30","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\Profileinfo\\ProfileStatus.jsx":"31","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\MyPosts\\MyPosts.jsx":"32","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\Profileinfo\\ProfileStatusWithHooks.jsx":"33","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\Profileinfo\\ProfileDataForm.jsx":"34","C:\\Users\\рома\\Documents\\react2\\src\\components\\common\\paginator\\Pagination.jsx":"35","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx":"36","C:\\Users\\рома\\Documents\\react2\\src\\Redux\\app-Reduser.ts":"37","C:\\Users\\рома\\Documents\\react2\\src\\Redux\\authReduser.ts":"38","C:\\Users\\рома\\Documents\\react2\\src\\Redux\\dialogReduser.ts":"39","C:\\Users\\рома\\Documents\\react2\\src\\Redux\\profileReduser.ts":"40"},{"size":1229,"mtime":1649013393561,"results":"41","hashOfConfig":"42"},{"size":375,"mtime":1639674209140,"results":"43","hashOfConfig":"42"},{"size":3290,"mtime":1649009544037,"results":"44","hashOfConfig":"42"},{"size":780,"mtime":1642965207241,"results":"45","hashOfConfig":"42"},{"size":4969,"mtime":1643049758108,"results":"46","hashOfConfig":"42"},{"size":566,"mtime":1639674209118,"results":"47","hashOfConfig":"42"},{"size":584,"mtime":1642880667492,"results":"48","hashOfConfig":"42"},{"size":2472,"mtime":1648582319534,"results":"49","hashOfConfig":"42"},{"size":591,"mtime":1639674209124,"results":"50","hashOfConfig":"42"},{"size":232,"mtime":1639674209140,"results":"51","hashOfConfig":"42"},{"size":2676,"mtime":1648922672772,"results":"52","hashOfConfig":"42"},{"size":1990,"mtime":1646075150505,"results":"53","hashOfConfig":"42"},{"size":723,"mtime":1640285483748,"results":"54","hashOfConfig":"42"},{"size":930,"mtime":1646075206431,"results":"55","hashOfConfig":"42"},{"size":1373,"mtime":1648059668633,"results":"56","hashOfConfig":"42"},{"size":871,"mtime":1640716997189,"results":"57","hashOfConfig":"42"},{"size":2384,"mtime":1648581820250,"results":"58","hashOfConfig":"42"},{"size":329,"mtime":1640546348272,"results":"59","hashOfConfig":"42"},{"size":476,"mtime":1642621133558,"results":"60","hashOfConfig":"42"},{"size":1592,"mtime":1639937527120,"results":"61","hashOfConfig":"42"},{"size":582,"mtime":1648148343051,"results":"62","hashOfConfig":"42"},{"size":1824,"mtime":1642619614813,"results":"63","hashOfConfig":"42"},{"size":1945,"mtime":1639676659566,"results":"64","hashOfConfig":"42"},{"size":439,"mtime":1639674209124,"results":"65","hashOfConfig":"42"},{"size":644,"mtime":1647029826887,"results":"66","hashOfConfig":"42"},{"size":383,"mtime":1639674209124,"results":"67","hashOfConfig":"42"},{"size":3542,"mtime":1648410022216,"results":"68","hashOfConfig":"42"},{"size":180,"mtime":1639674209124,"results":"69","hashOfConfig":"42"},{"size":1728,"mtime":1640372911575,"results":"70","hashOfConfig":"42"},{"size":1865,"mtime":1646942240238,"results":"71","hashOfConfig":"42"},{"size":1902,"mtime":1646417500609,"results":"72","hashOfConfig":"42"},{"size":2131,"mtime":1648323797142,"results":"73","hashOfConfig":"42"},{"size":1920,"mtime":1647712093117,"results":"74","hashOfConfig":"42"},{"size":1477,"mtime":1648322914448,"results":"75","hashOfConfig":"42"},{"size":2522,"mtime":1647116265155,"results":"76","hashOfConfig":"42"},{"size":428,"mtime":1639674209140,"results":"77","hashOfConfig":"42"},{"size":2165,"mtime":1649786857115,"results":"78","hashOfConfig":"42"},{"size":3347,"mtime":1649872697605,"results":"79","hashOfConfig":"42"},{"size":1963,"mtime":1649961879363,"results":"80","hashOfConfig":"42"},{"size":5272,"mtime":1649963387691,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"18784x4",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"84"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"84"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"84"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"84"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"84"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"84"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"84"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},{"filePath":"173","messages":"174","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"172"},{"filePath":"176","messages":"177","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"172"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"172"},"C:\\Users\\рома\\Documents\\react2\\src\\index.js",[],["181","182"],"C:\\Users\\рома\\Documents\\react2\\src\\reportWebVitals.js",[],"C:\\Users\\рома\\Documents\\react2\\src\\App.js",["183"],"import React, { Suspense } from 'react';\r\nimport \"./App.css\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport { Route, Switch, withRouter, Redirect } from \"react-router-dom\";\r\nimport NavContainer from \"./components/Nav/NavContainer\";\r\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport QplOogin from \"./components/Login/Login\";\r\nimport { initializeApp } from \"./Redux/app-Reduser\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n// ленивая загрузка почему-то работает внизу импортов\r\nclass App extends React.Component {\r\n  catchAllUnhandledError = (promiseRejectionEvent) => {\r\n    alert(\"Some error\");\r\n    // console.error(promiseRejectionEvent);\r\n    //reason, promiseRejectionEvent-почитать\r\n  }\r\n  componentDidMount() {\r\n    this.props.initializeApp();\r\n    window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledError );\r\n  //  глобальная  обработка ошибок\r\n  } \r\n  //END componentDidMount\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledError );\r\n  }\r\n  render() {\r\n    if (!this.props.initialized) {\r\n      return <Preloader />\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <HeaderContainer />\r\n        <NavContainer\r\n        /* store={props.store}\r\n            friends={props.stateaa.dialogPages.dialogs2}\r\n      так как взял отсюда , то при изменении Dialogs.jsx\r\n      меняется и в Nav.jsx \r\n        sideavata={props.stateaa.sidebar}*/\r\n        />\r\n\r\n        <div className=\"app-content\">\r\n          {/* <Route /> */}\r\n          <Suspense fallback={<div>Загрузка...</div>}>\r\n            <section>\r\n              <Route path=\"/dialogs/\" render={() => <DialogsContainer />} />\r\n              <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\r\n              {/* знак вопроса обозначает ,что может и не быть userId . это для withRouter */}\r\n            </section>\r\n          </Suspense>\r\n          <Route path=\"/users\" render={() => <UsersContainer />} />\r\n          <Route path=\"/login/\" render={() => <QplOogin />} />\r\n          <Route exact path=\"/\" render={() => <Redirect from=\"/\" to=\"/profile\" />} />\r\n          {/* <Route path=\"*\" render={() => <div>404 NOT FOUND</div>} /> */}\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized\r\n});\r\nexport default compose(withRouter,\r\n  connect(mapStateToProps, { initializeApp }))(App);\r\n/*   когда connect(им) компоненту сбивается роут поэтому добавлен withRouter\r\n  ,но вроде уже пофиксили эту ошибку и можно не добавлять */\r\n","C:\\Users\\рома\\Documents\\react2\\src\\Redux\\new-store.js",[],"C:\\Users\\рома\\Documents\\react2\\src\\Redux\\usersReduser.js",["184"],"import { usersApi } from \"../api/api\";\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst FOLLOWING_IS_FETCHING = \"FOLLOWING_IS_FETCHING\";\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 10, //сколько показывать юзеров\r\n  totalUsersCount: 0, //сколько всего юзеров\r\n  currentPage: 1, // выделен жирным номер страницы\r\n  isFetching: false,\r\n  followingInProgress: [],\r\n};\r\nconst usersReduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((u) => {\r\n          if (u.id === action.userId) {\r\n            return {\r\n              ...u,\r\n              followed: false,\r\n            };\r\n          }\r\n          return u;\r\n        }),\r\n      };\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map((u) => {\r\n          if (u.id === action.userId) {\r\n            return {\r\n              ...u,\r\n              followed: true,\r\n            };\r\n          }\r\n          return u;\r\n        }),\r\n      };\r\n\r\n    case SET_USERS:\r\n      return {\r\n        ...state,\r\n        users: /*...state.users, появляются дубли*/ action.users,\r\n      };\r\n    case SET_CURRENT_PAGE:\r\n      return {\r\n        ...state,\r\n        currentPage: action.currentPage,\r\n      };\r\n    case SET_TOTAL_USERS_COUNT:\r\n      return {\r\n        ...state,\r\n        totalUsersCount: action.count,\r\n      };\r\n    case TOGGLE_IS_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      };\r\n    case FOLLOWING_IS_FETCHING:\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter((id) => id != action.userId),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId });\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId });\r\nexport const setusers = (users) => ({ type: SET_USERS, users });\r\nexport const setcurrentpage = (currentPage) => ({\r\n  type: SET_CURRENT_PAGE,\r\n  currentPage,\r\n});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({\r\n  type: SET_TOTAL_USERS_COUNT,\r\n  count: totalUsersCount,\r\n});\r\nexport const toggleIsFetching = (isFetching) => ({\r\n  type: TOGGLE_IS_FETCHING,\r\n  isFetching,\r\n});\r\nexport const toggleFollowInProgress = (isFetching, userId) => ({\r\n  type: FOLLOWING_IS_FETCHING,\r\n  isFetching,\r\n  userId,\r\n});\r\n//Thunk внизу getUserThunkCreator\r\nexport const getUserThunkCreator = (currentPage, pageSize) => {\r\n  return (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    //внизу выделяю жирным цифру страница users\r\n    dispatch(setcurrentpage(currentPage));\r\n    usersApi\r\n      .getUsera(currentPage, pageSize)\r\n      //запрос на сервер данные на api.js урок 63, 7:00\r\n      //baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n      .then((data) => {\r\n        // response в api.js поменял на data 63\r\n        dispatch(toggleIsFetching(false));\r\n        //выше крутилку убрал\r\n        dispatch(setusers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n        //totalCount-на сервере число пользователей\r\n      });\r\n  };\r\n}; //End Thunk getUserThunkCreator\r\n//--------------------------\r\n//Thunk внизу follow\r\nexport const follow = (userId) => {\r\n  return (dispatch) => {\r\n    dispatch(toggleFollowInProgress(true, userId));\r\n    //включаю disabled кнопки\r\n    usersApi.followApi(userId)\r\n      // userApi  запрос delete из api.js\r\n      .then((response) => {\r\n        if (response.data.resultCode === 0) {\r\n          dispatch(followSuccess(userId));\r\n          //записал значение в state\r\n        }\r\n        dispatch(toggleFollowInProgress(false, userId));\r\n      });\r\n    //выключаю disabled кнопки}\r\n  };\r\n}; //End Thunk follow\r\n//--------------------------\r\n//Thunk внизу unfollow\r\nexport const unfollow = (userId) => {\r\n  return (dispatch) => {\r\n    dispatch(toggleFollowInProgress(true, userId));\r\n    //включаю disabled кнопки\r\n    usersApi.unfollowApi(userId)\r\n      // userApi получаю запрос из api.js\r\n      .then((response) => {\r\n        if (response.data.resultCode === 0) {\r\n          dispatch(unfollowSuccess(userId));\r\n          //записал значение в state\r\n        }\r\n        dispatch(toggleFollowInProgress(false, userId));\r\n      });\r\n    //выключаю disabled кнопки}\r\n  };\r\n}; //End Thunk unfollow\r\n\r\nexport default usersReduser;\r\n","C:\\Users\\рома\\Documents\\react2\\src\\Redux\\sidebarReduser .js",["185","186","187"],"let initialState = [\r\n  {\r\n    img2: (\r\n      <img src=\"https://i0.wp.com/andrey-eltsov.ru/wp-content/uploads/2018/02/SmailikSbor3.jpg\" />\r\n    ),\r\n  },\r\n  {\r\n    img2: (\r\n      <img src=\"https://i0.wp.com/andrey-eltsov.ru/wp-content/uploads/2018/02/SmailikSbor3.jpg\" />\r\n    ),\r\n  },\r\n  {\r\n    img2: (\r\n      <img src=\"https://i0.wp.com/andrey-eltsov.ru/wp-content/uploads/2018/02/SmailikSbor3.jpg\" />\r\n    ),\r\n  },\r\n];\r\nconst sidebarReduser = (state = initialState, action) => {\r\n  //let stateCopy={...state};\r\n  return state;\r\n};\r\nexport default sidebarReduser;\r\n","C:\\Users\\рома\\Documents\\react2\\src\\components\\Header\\HeaderContainer.jsx",["188"],"import * as axios from \"axios\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../Redux/authReduser\";\r\nimport Header from \"./Header\";\r\nclass HeaderContainer extends React.Component {\r\n  /* componentDidMount() {\r\n    this.props.getAuthDataUser();\r\n  } //END componentDidMount */\r\n  render() {\r\n    return <Header {...this.props} />;\r\n  }\r\n} //END HeaderContainer\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login\r\n});\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer);\r\n","C:\\Users\\рома\\Documents\\react2\\src\\components\\Login\\Login.jsx",["189"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { required } from \"../../utils/validator/validators\";\r\nimport { input } from \"../common/FormControls/FormControls\";\r\nimport { login } from \"../../Redux/authReduser\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport styles from \"../common/FormControls/FormControls.module.css\";\r\nimport {createField} from \"../common/FormControls/FormControls\";\r\nconst LoginForm = ({handleSubmit,error,capchaUrl}) => {\r\n  // убрал слово props\r\n  return <form onSubmit={handleSubmit}>\r\n    {createField(\"Email\",\"email\",[required],input,)}\r\n    {createField(\"Password\",\"password\",[required],input,{type:\"password\"})}\r\n    {createField(null,\"rememberMe\",[],input,{type:\"checkbox\"},\"remember me\")}\r\n    {/* ниже капча */}\r\n    {capchaUrl&&<img src={capchaUrl}/>}\r\n    {capchaUrl&&createField(\"Введите капчу\",\"captcha\",[required],input,{})}\r\n\r\n    {error&&<div className={styles.formSummaryError}>\r\n     {error}\r\n    </div>}\r\n    <div>\r\n      <button>Login</button>\r\n    </div>\r\n  </form>\r\n  //внутри handleSubmit находится formData\r\n};\r\nconst LoginReduxForm = reduxForm({ form: \"login\" })(LoginForm);\r\n/*обворачиваем (хоком reduxForm) компоненту LoginForm\r\n и получаем контейнерную  компоненту LoginReduxForm */\r\nconst Login2 = (props) => {\r\n  const aonSubmit = (formData) => {\r\n    //75 урок 32:00 formData значение из reduxForm->handleSubmit\r\n    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    //login с маленькой\r\n    //78 18:40 логинизация\r\n    //console.log(formData);\r\n    //без console.log не работает\r\n    /* mapStateToProps = (state) => {\r\n      return { form: state.form };\r\n    };\r\n    let mapDispatchToProps = (dispatch) => {\r\n      return {\r\n        onSubmit: () => {\r\n          dispatch(onSubmitAC());\r\n        },\r\n      };\r\n    };*/\r\n  }\r\n  if (props.isAuth) {\r\n    return <Redirect to={'/profile'}/>\r\n  } \r\n  return <div>\r\n    <h1>LOGIN</h1>\r\n    <LoginReduxForm onSubmit={aonSubmit} capchaUrl={props.capchaUrl}/>\r\n  </div>\r\n};\r\nconst mapStateToProps=(state)=>({\r\n  isAuth:state.auth.isAuth,\r\n  capchaUrl:state.auth.capchaUrl\r\n})\r\nexport default connect(mapStateToProps, {login})(Login2);\r\n//login приходит из authReduser login с маленькой\r\n","C:\\Users\\рома\\Documents\\react2\\src\\components\\Nav\\NavContainer.jsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\common\\Preloader\\Preloader.jsx",["190"],"import React from \"react\";\r\nimport preloader from \"../../../assets/images/Spinner-1s-200px.svg\";\r\nlet Preloader = (props) => {\r\n  return (\r\n    <div>\r\n      <img src={preloader} />\r\n    </div> \r\n  );\r\n};\r\nexport default Preloader;\r\n","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\ProfileContainer.jsx",["191"],"import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { profilesData, getStatus, updateUserStatus,savePhoto,saveProfile } from \"../../Redux/profileReduser\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  // чтобы код не писать дважды ниже создам refreshProfile\r\n  refreshProfile(){\r\n    let userIdd = this.props.match.params.userId\r\n    /*когда вызывается withRouter из url метод match возвращает params-userId\r\n    и получаю id юзера*/\r\n    if (!userIdd) {\r\n      userIdd = this.props.authorizedUserId;\r\n    }\r\n   /*  if (!userIdd) {\r\n      this.props.history.push(\"/login\");\r\n      когда жму кнопку вылогиниться нужно уйти из профиля,\r\n      но вроде и так срабатывает withAuthRedirect,\r\n       а это \"програмный\" редирект\r\n    } */\r\n    this.props.profilesData(userIdd);\r\n    this.props.getStatus(userIdd);\r\n    //вызываю thunk из редюсера\r\n  }\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  } //end componentDidMount\r\n  componentDidUpdate(prevProps,prevState,snapshot){\r\n    if (this.props.match.params.userId !=prevProps.match.params.userId){\r\n      this.refreshProfile();\r\n    }\r\n    // match из withRouter\r\n    // чтобы с чужого профиля переходить на свой при нажатии на profile\r\n  }\r\n  render() {\r\n    return <Profile {...this.props}\r\n              isOwner={!this.props.match.params.userId}\r\n              // если нет userId\r\n              status={this.props.status}\r\n              updateUserStatus={this.props.updateUserStatus}\r\n              profile={this.props.profile}/*profile={this.props.profile} -был заккоментирован*/ \r\n              savePhoto={this.props.savePhoto}/>\r\n  }\r\n} //end ProfileContainer\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.id,\r\n  isAuth: state.auth.isAuth,\r\n});\r\nexport default compose(\r\n  connect(mapStateToProps, { profilesData, getStatus, updateUserStatus,savePhoto,saveProfile}),\r\n  withAuthRedirect,\r\n  //withRouter получаю из url нужную часть\r\n  withRouter\r\n)(ProfileContainer);\r\n//возьми ProfileContainer и закинь его в withRouter--> withAuthRedirect,а \r\n// потом результат в connect(mapStateToProps...\r\n","C:\\Users\\рома\\Documents\\react2\\src\\components\\Users\\UsersContainer.jsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Dialogs\\DialogsContainer.jsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\Redux\\users-selectors.js",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\common\\FormControls\\FormControls.js",[],"C:\\Users\\рома\\Documents\\react2\\src\\hoc\\withAuthRedirect.js",[],"C:\\Users\\рома\\Documents\\react2\\src\\api\\api.js",[],"C:\\Users\\рома\\Documents\\react2\\src\\utils\\validator\\validators.js",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Header\\Header.jsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Nav\\Nav.jsx",["192","193"],"import { NavLink } from \"react-router-dom\";\r\nimport classes from \"./Nav.module.css\";\r\nimport Navitem from \"./Navitem\";\r\nconst Nav = (props) => {\r\n  let navElements = props.friends.map((d) => (\r\n    <Navitem name={d.nname} id={d.id} avatar={d.avatar} />\r\n  ));\r\n    let nifElements = props.sideavata.map((m) => (\r\n      <Navitem foto={m.img2} />\r\n    ));\r\n  return (\r\n    <nav className={classes.nav}>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/profile\" activeClassName={classes.activeLink}>\r\n          Profile\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/dialogs\" activeClassName={classes.active}>\r\n          Dialogs\r\n        </NavLink>\r\n        {/* activeClassName стиль активной ссылки */}\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/users\" activeClassName={classes.active}>\r\n          Users\r\n        </NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <a>News</a>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/musik\">Music</NavLink>\r\n      </div>\r\n      <div className={classes.item}>\r\n        <NavLink to=\"/login\">Login</NavLink>\r\n      </div>\r\n      <div className={`${classes.item} ${classes.aert}`}>\r\n        {/* 2 стиля для одного элемента перестало работать*/}\r\n        <a>Settings</a>\r\n      </div>\r\n      <div> FRIENDS:</div>\r\n      <div className={classes.navitem}>\r\n        {navElements}\r\n         {nifElements} \r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\Profile.jsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Dialogs\\Dialogs.jsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Users\\UsersApiContainer.jsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Nav\\Navitem.jsx",["194"],"import { NavLink } from \"react-router-dom\";\r\nimport classes from \"./Nav.module.css\";\r\nconst Navitem = (props) => {\r\n \r\n  return (\r\n    <div className={classes.friends}>\r\n     <div className={classes.nu}>{props.name}{props.foto}</div>\r\n      {/* <div className={classes.mnu}>{props.name}{props.foto}</div>\r\n     <div className={classes.pnu}>{props.name}{props.foto}</div>\r\n      */}\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navitem;\r\n","C:\\Users\\рома\\Documents\\react2\\src\\components\\Users\\Users.jsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Dialogs\\Dialogitem\\Dialogitem.jsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\Profileinfo\\Profileinfo.jsx",["195","196","197","198"],"\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport classes from \"./Profileinfo.module.css\"\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"./../../../assets/images/users.png\";\r\nimport { useState } from \"react\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nconst Profileinfo = (props) => {\r\n  let [editMode,setEditMode]= useState(false)\r\n//    деструктуризация массива\r\n//    useState сидит в библиотеке react\r\n//useState возвращает первым номером значение и 2м ф. \r\n// которая меняет это значение(1-editMode,2-setEditMode)\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  }\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      // если фото имеет длинну-не пустая\r\n      props.savePhoto(e.target.files[0])\r\n      // то возьми это фото\r\n      console.log(props.savePhoto)\r\n    }\r\n  }\r\n  const onSubmit = (formData) => {\r\n        props.saveProfile(formData).then(()=>{\r\n         setEditMode(false);\r\n        });\r\n        // async await не сработал\r\n    }\r\n  return (\r\n    <div>\r\n      <img src=\"https://i.pinimg.com/originals/f5/39/b6/f539b6967cb0f250d4e05cc133a8c87d.jpg\" width=\"800\" height=\"400\" />\r\n      {/* пляж */}\r\n      <div className={classes.descr}>\r\n        <img src={props.profile.photos.large || userPhoto} className={classes.avatar} />\r\n        {props.isOwner && <input type=\"file\" onChange={onMainPhotoSelected} />}\r\n        {/* если есть isOwner покажи кнопку с выбором файла */}\r\n       {editMode?\r\n       <ProfileDataForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit}/>:\r\n      //  initialValues метод redux-form. При перезагрузке страницы ,\r\n      //  чтобы сохранялись в input и textarea введенные значения\r\n       <ProfileData goToEditMode={()=>{setEditMode(true)}} isOwner={props.isOwner} profile={props.profile} />}\r\n        {/* тринарное выражение на верху */}\r\n        <ProfileStatusWithHooks status={props.status}\r\n          updateUserStatus={props.updateUserStatus} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst ProfileData = ({ profile,isOwner,goToEditMode }) => {\r\n  return <div>\r\n    {isOwner&&<div><button onClick={goToEditMode}>edit</button></div>}\r\n    <div>avat+descr</div>\r\n    <div>Имя:{profile.fullName}</div>\r\n    <div>обо мне: {profile.aboutMe}</div>\r\n    <div>ищешь работу?{profile.lookingForAJob == true ? 'Да' : 'Нет'}</div>\r\n    <div>\r\n      какую хочешь работу? {profile.lookingForAJobDescription}\r\n    </div>\r\n    <div>\r\n      контакты:{Object.keys(profile.contacts).map(key => {\r\n        // Object.keys(obj) – возвращает массив ключей.\r\n        return <Contacts key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n        // contactValue  пример: let abv={\r\n        //  github: qwerty\r\n        //     vk: trytry\r\n        //     facebook: popop}\r\n        //     abv[facebook] вернет popop\r\n        // key={key} зачем не понял\r\n      })}\r\n    </div>\r\n  </div>\r\n}\r\nconst Contacts = ({ contactTitle, contactValue }) => {\r\n  return <div className={classes.contact}>\r\n    {contactTitle}:{contactValue}\r\n  </div>\r\n}\r\n\r\nexport default Profileinfo;\r\n","C:\\Users\\рома\\Documents\\react2\\src\\components\\Dialogs\\Messages\\Messages.jsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\MyPosts\\MyPostsContainer.jsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Users\\User.jsx",["199","200"],"import React from \"react\";\r\nimport styles from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/users.png\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Pagination from \"../common/paginator/Pagination\";\r\n\r\nlet User = ({user,followingInProgress,follow,unfollow}) => {\r\n  return (\r\n        <div>\r\n          <span>\r\n            <div>\r\n              <NavLink to={\"/profile/\" + user.id}>\r\n                <img\r\n                  src={user.photos.small !== null ? user.photos.small : userPhoto}\r\n                  className={styles.userPhoto}\r\n                />\r\n              </NavLink>\r\n            </div>\r\n            <div>\r\n              {\r\n                user.followed ? (\r\n                    <button disabled={followingInProgress.some(id=>id===user.id)}\r\n                    onClick={() => {\r\n                      follow(user.id);\r\n                      //вызываю thunk из редюсера, delete\r\n                     } }\r\n                    >Follow\r\n                  </button>\r\n                ) : (\r\n                  <button disabled={followingInProgress.some(id=>id===user.id)}\r\n                    onClick={() => {\r\n                    unfollow(user.id);\r\n                      //вызываю thunk из редюсера\r\n                    } }\r\n                  >\r\n                    Unfollow\r\n                  </button>\r\n                )\r\n                //тринарное выражение\r\n              }\r\n            </div>\r\n          </span>\r\n          <span>\r\n            <span>\r\n              <div>{user.name}</div>\r\n              <div>{user.status}</div>\r\n            </span>\r\n            <span>\r\n              <div>{\"user.location.city\"}</div>\r\n              <div>{\"user.location.cantry\"}</div>\r\n            </span>\r\n          </span>\r\n        </div>\r\n  );\r\n}; //end Users\r\nexport default User;\r\n","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\Profileinfo\\ProfileStatus.jsx",["201"],"import classes from \"./Profileinfo.module.css\"\r\nimport React from \"react\";\r\n//  отключен\r\n//  отключен\r\n//  отключен\r\n//  отключен\r\n//  отключен\r\n//  отключен\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: true,\r\n        status: this.props.status\r\n    }\r\n    //локальный стейт\r\n    activateEditMode = () => {\r\n        this.setState(\r\n            { editMode: true }\r\n        );\r\n    };\r\n    //setState -- метод React.Component\r\n    //setState асинхронен\r\n    deactivateEditMode = () => {\r\n        this.setState(\r\n            { editMode: false }\r\n        );\r\n        this.props.updateUserStatus(this.state.status);\r\n        //взял status из локального state\r\n    };\r\n    //урок 71 фокус\r\n    onStatusChange = (e) => {\r\n        this.setState(\r\n            { status: e.currentTarget.value });\r\n    }\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState(\r\n                { status: this.props.status }\r\n            );\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div>{!this.state.editMode &&\r\n                //если editMode в стейте=false ,то...\r\n                <div>\r\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || \"no status\"}</span>\r\n                </div>\r\n            }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                        <input onChange={this.onStatusChange}/*хз так как value зафиксирован*/\r\n                            autoFocus={true}\r\n                            onBlur={this.deactivateEditMode} value={this.state.status} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n};\r\nexport default ProfileStatus;\r\n","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\MyPosts\\MyPosts.jsx",["202"],"import classes from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validator/validators\";\r\nimport { input } from \"../../common/FormControls/FormControls\";\r\n// console.log(MyPosts);\r\nconst maxLength10=maxLengthCreator(10);\r\nconst MyPosts =React.memo(props => {\r\n  // React.memo если пропсы не поменялись.то не рендерь\r\n  let postElement = props.post.map((p) => (\r\n    <Post key={p.id} message={p.message} count={p.count} />\r\n  ));\r\n  let newPostElement = React.createRef(); /* 31 реакт создай ссылку*/\r\n  let addhhPost = (values) => {\r\n    // let newtext = newPostElement.current.value; -перенес в state\r\n    props.addPost(values.newPostText);\r\n    //props.dispatch(addhhPostActionCreator());\r\n    /*31,32 вызываю функцию addPost\r\n      в state.js */\r\n    /* props.updatenewPost('');обнуляю значение в textarea \r\n    -перенес в state.js */\r\n  };\r\n  // let onPostChange = () => {\r\n  //   let newtext5 = newPostElement.current.value;\r\n  //   props.updateNewPostText(newtext5);\r\n  //   //let action=(onPostChangeActionCreator(newtext5))\r\n  //   //создал action для примера чтобы видеть процесс\r\n  //   //props.dispatch(action);\r\n  //   //при изменении в textarea передаю данные в state.js\r\n  // };\r\n  return (\r\n    <div className={classes.post}>\r\n      <h2>My Post</h2>\r\n      <div>\r\n        <PostReduxForm onSubmit={addhhPost}/>\r\n      </div>\r\n      <div className={classes.newpost}>{postElement}</div>\r\n    </div>\r\n  );\r\n});\r\nconst myPostForm= (props) => {\r\n  return(\r\n  <form onSubmit={props.handleSubmit}>\r\n    <div>\r\n      <Field component={input} name=\"newPostText\" placeholder=\"введите\" \r\n      validate={[required,maxLength10]} />\r\n    </div>\r\n    <div>\r\n      <button >Add post</button>\r\n    </div>\r\n  </form>\r\n  )\r\n};\r\nconst PostReduxForm = reduxForm({ form: \"myPostText\" })(myPostForm);\r\nexport default MyPosts;\r\n","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\Profileinfo\\ProfileStatusWithHooks.jsx",["203","204"],"import classes from \"./Profileinfo.module.css\"\r\nimport React, { useState, useEffect } from \"react\";\r\n// import { useEffect } from \"react\";\r\n\r\nconst ProfileStatusWithHooks= (props) =>{\r\n   let [editMode,setEditMode]= useState(false)\r\n//    деструктуризация массива\r\n//    useState сидит в библиотеке react\r\n//useState возвращает первым номером значение и 2м ф. \r\n// которая меняет это значение(1-editMode,2-setEditMode)\r\nlet [status,setStatus]= useState(props.status)\r\n// раздробил локальный стейт на 2 части\r\nuseEffect( ()=>{\r\n    setStatus=(props.status);\r\n},[props.status])\r\n// зависишь от [props.status] если он поменялся то отрисуй\r\n// useEffect срабатывает после отрисовки компоненты\r\nconst activateEditMode = () => {\r\n  setEditMode(true)\r\n}\r\nconst deactivateEditMode = () => {\r\n    setEditMode(false)\r\n    props.updateUserStatus(status);\r\n}\r\nconst onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n    // закидываю вводимые символы в props.status\r\n}\r\n            return (\r\n            <div>{!editMode&&//если editMode в стейте=false ,то...\r\n                <div>\r\n                   <b>status:</b> <span onDoubleClick={activateEditMode}>{props.status ||\"no status\"}</span>\r\n                </div>\r\n            }\r\n                {editMode &&\r\n                    <div>\r\n                        <input onChange={onStatusChange} \r\n                        // при изменениии в input\r\n                        value={status}\r\n                         autoFocus={true}\r\n                          onBlur={deactivateEditMode} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    \r\n};\r\nexport default ProfileStatusWithHooks;\r\n","C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\Profileinfo\\ProfileDataForm.jsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\common\\paginator\\Pagination.jsx",[],"C:\\Users\\рома\\Documents\\react2\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx",["205"],"import classes from \"./Post.module.css\";\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={classes.item}>\r\n      <img src=\"http://pngimg.com/uploads/spongebob/spongebob_PNG8.png\" />\r\n      {/* <img src=\"https://kurer-sreda.ru/wp-contenpt/uloads/2020/06/1-48-800x663.png\" /> */}\r\n\r\n      {props.message}\r\n      <div>\r\n        <span>Like {props.count}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","C:\\Users\\рома\\Documents\\react2\\src\\Redux\\app-Reduser.ts",[],["206","207"],"C:\\Users\\рома\\Documents\\react2\\src\\Redux\\authReduser.ts",["208"],"import { stopSubmit } from \"redux-form\";\r\nimport { loginApi, securityApi } from \"../api/api\";\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\";\r\nconst GET_CAPCHA_URL_SUCCESS = \"GET_CAPCHA_URL_SUCCESS\"\r\n// ******************************\r\nexport type initialStateType = {\r\n  id: number|null,\r\n  email:string|null,\r\n  login: string|null,\r\n  isAuth: boolean,\r\n  capchaUrl:string|null,\r\n};\r\nlet initialState:initialStateType = {\r\n  id: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n  capchaUrl: null,\r\n};\r\nexport type initialStateType = typeof initialState\r\n//начальный state\r\nconst authReduser = (state = initialState, action:any):initialStateType => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n      case GET_CAPCHA_URL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...action.data,\r\n        //isAuth: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n// **************************\r\ntype setAuthUserDataType={\r\n  type:typeof SET_USER_DATA,\r\n  data: {email:string|null,\r\n    login:string|null,\r\n    id:number|null,\r\n    isAuth:boolean }\r\n}\r\nexport const setAuthUserData = (email:string|null, login:string|null, id:number|null, isAuth:boolean):setAuthUserDataType => ({ type: SET_USER_DATA, data: { email, login, id, isAuth } });\r\n// ***********\r\ntype getCaptchaSuccessActionType={\r\n  type:typeof GET_CAPCHA_URL_SUCCESS,\r\n   data: { capchaUrl:string }\r\n}\r\nexport const getCaptchaSuccess = (capchaUrl:string):getCaptchaSuccessActionType => ({ type: GET_CAPCHA_URL_SUCCESS, data: { capchaUrl } });\r\n// ******************\r\nexport const getAuthDataUser = () => async (dispatch:any) => {\r\n  // return (dispatch)=>{\r\n  let response = await loginApi.me()\r\n  // .then((response) => {\r\n  if (response.data.resultCode === 0) {\r\n    let { email, login, id } = response.data.data;\r\n    dispatch(setAuthUserData(email, login, id, true));\r\n  }\r\n  // });\r\n  // }\r\n}\r\nexport const login = (email:string, password:string, rememberMe:boolean,captcha:any) => async (dispatch:any) => {\r\n  //login с маленькой\r\n  // return (dispatch)=>{\r\n  let response = await loginApi.login(email, password, rememberMe,captcha)\r\n  // .then((response) => {\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getAuthDataUser());\r\n  }\r\n  //79 ещё, если несколько раз неправильно введены пароль или email то:\r\n  else {\r\n    if (response.data.resultCode === 10) {\r\n      dispatch(captcha2());\r\n    }\r\n    let message = response.data.messages.length > 0 ? response.data.messages[0] :\r\n      \"Неправильный логин или пароль\";\r\n    dispatch(stopSubmit(\"login\", { _error: message }));\r\n  }\r\n}\r\nexport const logout = () => async (dispatch:any) => {\r\n  //logout с маленькой\r\n  // return (dispatch)=>{\r\n  let response = await loginApi.logout()\r\n  // .then((response) => {\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false));\r\n    //вылогинились и зачищаеи пароль почта id isAuth\r\n  }\r\n  //     });\r\n  // }\r\n}\r\nexport const captcha2 = () => async (dispatch:any) => {\r\n  let response = await securityApi.getCaptchaUrl()\r\n  // .then((response) => {\r\n  const capchaUrl = response.data.url\r\n  //  нужно объявить в инициализации выше capchaUrl:null\r\n  dispatch(getCaptchaSuccess(capchaUrl));\r\n  //вызываю экшн кревтор\r\n}\r\nexport default authReduser;\r\n","C:\\Users\\рома\\Documents\\react2\\src\\Redux\\dialogReduser.ts",["209"],"const ADD_NEW_DIALOG = \"ADD-NEW-DIALOG\";\r\ntype dialogType={\r\n  id:number\r\n  nname:string\r\n  img:any,\r\n    src:string\r\n}\r\ntype messageType={\r\n  id:number\r\n  message:string\r\n}\r\n\r\nlet initialState = {\r\n  dialogs2: [\r\n    {\r\n      id: 1,\r\n      nname: \"Dimich\",\r\n      avatar: (\r\n        <img src=\"http://pngimg.com/uploads/spongebob/spongebob_PNG8.png\" />\r\n      ),\r\n    },\r\n\r\n    {\r\n      id: 2,\r\n      nname: \"Roma\",\r\n      avatar: (\r\n        <img src=\"http://pngimg.com/uploads/spongebob/spongebob_PNG8.png\" />\r\n      ),\r\n    },\r\n    {\r\n      id: 3,\r\n      nname: \"Petiya\",\r\n      avatar: (\r\n        <img src=\"http://pngimg.com/uploads/spongebob/spongebob_PNG8.png\" />\r\n      ),\r\n    },\r\n    {\r\n      id: 4,\r\n      nname: \"Igor\",\r\n      avatar: (\r\n        <img src=\"http://pngimg.com/uploads/spongebob/spongebob_PNG8.png\" />\r\n      ),\r\n    },\r\n  ] as Array<dialogType>,\r\n  //newDialog: \"\",\r\n  messages2: [\r\n    { id: 1, message: \"привет\" },\r\n    { id: 2, message: \"позвони мне\" },\r\n    { id: 3, message: \"напиши номер\" },\r\n  ]as Array<messageType>\r\n};\r\nexport type initialStateType = typeof initialState\r\nconst dialogReduser = (state = initialState, action:any):initialStateType => {\r\n  switch (action.type) {\r\n    case ADD_NEW_DIALOG:\r\n      return{\r\n     ...state,\r\n     dialogs2:[...state.dialogs2,{id: 5,\r\n      nname: action.newDialog,\r\n      avatar: (\r\n        <img src=\"http://pngimg.com/uploads/spongebob/spongebob_PNG8.png\" />\r\n      )}], /* урок 32 */\r\n     //newDialog: \"\" // стираю текст в textarea\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\ntype addDialogActionCreatorType={\r\n  type:typeof ADD_NEW_DIALOG,\r\n  newDialog:string\r\n}\r\n// если функция только возвращает значение то можно без return\r\nexport const addDialogActionCreator = (newDialog:string):addDialogActionCreatorType =>\r\n({ type: ADD_NEW_DIALOG,newDialog});\r\nexport default dialogReduser;\r\n","C:\\Users\\рома\\Documents\\react2\\src\\Redux\\profileReduser.ts",[],{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":4,"column":17,"nodeType":"216","messageId":"217","endLine":4,"endColumn":23},{"ruleId":"218","severity":1,"message":"219","line":72,"column":57,"nodeType":"220","messageId":"221","endLine":72,"endColumn":59},{"ruleId":"222","severity":1,"message":"223","line":4,"column":7,"nodeType":"224","endLine":4,"endColumn":99},{"ruleId":"222","severity":1,"message":"223","line":9,"column":7,"nodeType":"224","endLine":9,"endColumn":99},{"ruleId":"222","severity":1,"message":"223","line":14,"column":7,"nodeType":"224","endLine":14,"endColumn":99},{"ruleId":"214","severity":1,"message":"225","line":1,"column":13,"nodeType":"216","messageId":"217","endLine":1,"endColumn":18},{"ruleId":"222","severity":1,"message":"223","line":17,"column":17,"nodeType":"224","endLine":17,"endColumn":39},{"ruleId":"222","severity":1,"message":"223","line":6,"column":7,"nodeType":"224","endLine":6,"endColumn":30},{"ruleId":"218","severity":1,"message":"219","line":32,"column":40,"nodeType":"220","messageId":"221","endLine":32,"endColumn":42},{"ruleId":"226","severity":1,"message":"227","line":30,"column":9,"nodeType":"224","endLine":30,"endColumn":12},{"ruleId":"226","severity":1,"message":"227","line":40,"column":9,"nodeType":"224","endLine":40,"endColumn":12},{"ruleId":"214","severity":1,"message":"228","line":1,"column":10,"nodeType":"216","messageId":"217","endLine":1,"endColumn":17},{"ruleId":"214","severity":1,"message":"229","line":4,"column":8,"nodeType":"216","messageId":"217","endLine":4,"endColumn":21},{"ruleId":"222","severity":1,"message":"223","line":34,"column":7,"nodeType":"224","endLine":34,"endColumn":122},{"ruleId":"222","severity":1,"message":"223","line":37,"column":9,"nodeType":"224","endLine":37,"endColumn":89},{"ruleId":"218","severity":1,"message":"230","line":58,"column":47,"nodeType":"220","messageId":"221","endLine":58,"endColumn":49},{"ruleId":"214","severity":1,"message":"231","line":5,"column":8,"nodeType":"216","messageId":"217","endLine":5,"endColumn":18},{"ruleId":"222","severity":1,"message":"223","line":13,"column":17,"nodeType":"224","endLine":16,"endColumn":19},{"ruleId":"214","severity":1,"message":"232","line":1,"column":8,"nodeType":"216","messageId":"217","endLine":1,"endColumn":15},{"ruleId":"214","severity":1,"message":"233","line":14,"column":7,"nodeType":"216","messageId":"217","endLine":14,"endColumn":21},{"ruleId":"214","severity":1,"message":"232","line":1,"column":8,"nodeType":"216","messageId":"217","endLine":1,"endColumn":15},{"ruleId":"234","severity":1,"message":"235","line":14,"column":16,"nodeType":"236","endLine":14,"endColumn":28},{"ruleId":"222","severity":1,"message":"223","line":5,"column":7,"nodeType":"224","endLine":5,"endColumn":75},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":null,"fatal":true,"severity":2,"message":"237","line":23,"column":6},{"ruleId":null,"fatal":true,"severity":2,"message":"238","line":19,"column":13},"no-native-reassign",["239"],"no-negated-in-lhs",["240"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'axios' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'NavLink' is defined but never used.","'ProfileStatus' is defined but never used.","Expected '===' and instead saw '=='.","'Pagination' is defined but never used.","'classes' is defined but never used.","'newPostElement' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'setStatus' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Parsing error: ';' expected.","Parsing error: '>' expected.","no-global-assign","no-unsafe-negation"]